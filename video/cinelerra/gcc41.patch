--- ./guicast/bclistbox.h~	2005-07-06 22:44:03.000000000 +0200
+++ ./guicast/bclistbox.h	2006-03-28 17:20:51.000000000 +0200
@@ -351,7 +351,7 @@
 
 	int get_title_h();
 	int calculate_item_coords();
-	void BC_ListBox::calculate_last_coords_recursive(
+	void calculate_last_coords_recursive(
 		ArrayList<BC_ListBoxItem*> *data,
 		int *icon_x,
 		int *next_icon_x,
--- ./guicast/bcpopupmenu.h~	2005-09-07 23:25:13.000000000 +0200
+++ ./guicast/bcpopupmenu.h	2006-03-28 17:23:44.000000000 +0200
@@ -2,7 +2,7 @@
 #define BCPOPUPMENU_H
 
 #include "bcmenubar.inc"
-#include "bcmenuitem.inc"
+#include "bcmenuitem.h"
 #include "bcsubwindow.h"
 
 
--- ./guicast/bcfilebox.h~	2005-07-06 22:18:05.000000000 +0200
+++ ./guicast/bcfilebox.h	2006-03-28 17:21:47.000000000 +0200
@@ -6,7 +6,7 @@
 #include "bcfilebox.inc"
 #include "bclistbox.inc"
 #include "bclistboxitem.inc"
-#include "bcnewfolder.inc"
+#include "bcnewfolder.h"
 #include "bcresources.inc"
 #include "bctextbox.h"
 #include "bcwindow.h"
--- ./plugins/burn/burn.h~	2005-04-20 22:15:22.000000000 +0200
+++ ./plugins/burn/burn.h	2006-03-28 20:02:29.000000000 +0200
@@ -75,7 +75,7 @@
 
 
 
-	void BurnMain::HSItoRGB(double H, 
+	void HSItoRGB(double H, 
 		double S, 
 		double I, 
 		int *r, 
--- ./cinelerra/virtualconsole.h~	2005-04-20 22:15:17.000000000 +0200
+++ ./cinelerra/virtualconsole.h	2006-03-28 20:06:25.000000000 +0200
@@ -28,7 +28,7 @@
 
 // Called during each process buffer operation to reset the status
 // of the attachments to unprocessed.
-	void VirtualConsole::reset_attachments();
+	void reset_attachments();
 	void dump();
 
 
--- ./cinelerra/renderfarmclient.h~	2005-06-27 20:44:29.000000000 +0200
+++ ./cinelerra/renderfarmclient.h	2006-03-28 20:18:18.000000000 +0200
@@ -70,7 +70,7 @@
 
 
 
-	void RenderFarmClientThread::read_preferences(int socket_fd, 
+	void read_preferences(int socket_fd, 
 		Preferences *preferences);
 	void read_asset(int socket_fd, Asset *asset);
 	void read_edl(int socket_fd, 
--- ./cinelerra/vrender.h~	2005-04-20 22:15:17.000000000 +0200
+++ ./cinelerra/vrender.h	2006-03-28 20:21:20.000000000 +0200
@@ -48,7 +48,7 @@
 // Flash the output on the display
 	int flash_output();
 // Determine if data can be copied directly from the file to the output device.
-	void VRender::get_render_strategy(Edit* &playable_edit, 
+	void get_render_strategy(Edit* &playable_edit, 
 		int &colormodel, 
 		int &use_vconsole,
 		int64_t position);
--- ./cinelerra/framecache.h~	2005-04-20 22:15:17.000000000 +0200
+++ ./cinelerra/framecache.h	2006-03-28 20:14:58.000000000 +0200
@@ -73,7 +73,7 @@
 		int64_t position,
 		double frame_rate,
 		int *item_return);
-	int FrameCache::frame_exists(int64_t position, 
+	int frame_exists(int64_t position, 
 		double frame_rate,
 		int color_model,
 		int w,
--- ./cinelerra/zoombar.h~	2005-07-07 02:49:25.000000000 +0200
+++ ./cinelerra/zoombar.h	2006-03-28 20:13:01.000000000 +0200
@@ -24,7 +24,7 @@
 	~ZoomBar();
 
 	int create_objects();
-	void ZoomBar::resize_event();
+	void resize_event();
 	int draw();
 	int resize_event(int w, int h);
 	void redraw_time_dependancies();
--- ./cinelerra/file.h~	2005-04-20 22:15:17.000000000 +0200
+++ ./cinelerra/file.h	2006-03-28 20:04:15.000000000 +0200
@@ -140,7 +140,7 @@
 
 
 // Read frame of video into the argument
-	int File::read_frame(VFrame *frame);
+	int read_frame(VFrame *frame);
 
 
 // The following involve no extra copies.
--- ./mpeg2enc/mblock_sub44_sads.c~	2006-03-28 20:23:15.000000000 +0200
+++ ./mpeg2enc/mblock_sub44_sads.c	2006-03-28 20:23:19.000000000 +0200
@@ -61,7 +61,7 @@
  *
  */
 
-static __inline__ void load_blk(uint8_t *blk, uint32_t rowstride, int h)
+static void load_blk(uint8_t *blk, uint32_t rowstride, int h)
 {
 // Required to get GCC 4.0 to use the right registers as the source argument to
 // movq
--- ./mpeg2enc/quantize_x86.c~	2005-08-08 01:49:51.000000000 +0200
+++ ./mpeg2enc/quantize_x86.c	2006-03-28 20:24:20.000000000 +0200
@@ -234,7 +234,7 @@
 			  "movd %%eax, %%mm6\n"
 			  : :"g" (1) : "eax" );
 	/* Set up SSE rounding mode */
-	__asm__ ( "ldmxcsr %0\n" : : "X" (trunc_mxcsr) );
+	__asm__ ( "ldmxcsr %0\n" : : "m" (trunc_mxcsr) );
 
 	/* Load satlim into mm1 */
 	movd_m2r( satlim, mm1 );
