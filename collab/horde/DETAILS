           SPELL=horde
if  [[  "$HORDE_DEVEL"  ==  'y'  ]];  then
         VERSION=$(date +%Y%m%d)
          SOURCE=$SPELL-$VERSION.tar.bz2
   SOURCE_URL[0]=cvs://:pserver:cvsread:horde@anoncvs.horde.org:/repository:$SPELL:HEAD
   SOURCE_IGNORE='volatile'
  FORCE_DOWNLOAD='on'
else
         VERSION=3.1
     SOURCE_HASH='sha512:3f7d3c1cc49a572f7afb4a115ed86d58e52f22e11e32fbb6d7acc47883f1d9699eae80933967247ae4f51f16a6608916f9761ba73c2b2cd1b0c984a5b1c93a2d'
          SOURCE=$SPELL-$VERSION.tar.gz
   SOURCE_URL[0]=ftp://ftp.horde.org/pub/$SPELL/$SOURCE
fi
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
        WEB_SITE=http://www.horde.org/horde/
         ENTERED=20020428
         UPDATED=20030108
      LICENSE[0]=LGPL
     GATHER_DOCS=off
       BUILD_API=2
           SHORT="General-purpose web application framework in PHP"
cat << EOF
The Horde Framework is the glue that all Horde applications have in common.
It is many things, including some coding standards, common code, and
inter-application communication. The shared code provides common ways of
handling things like preferences, permissions, browser detection, user help,
and more.

Required PHP compilation options (BUILD fails if they were off):
--with-gettext for internationalization support
--with-xml     for XML support
--with-imap    for IMAP and POP3 support
Recommended PHP compilation options:
--with-mysql  to store preferences in MySQL
--with-pgsql  to store preferences in PostgreSQL
--with-oracle to store preferences in Oracle
--with-ldap   to store preferences in LDAP
--with-mcrypt to provide cryptographics beyond PHP built-in
--enable-ftp  for Gollem support
Also recommended:
* sendmail(8) API and a local sendmail interface (included with sendmail,
* postfix, qmail, exim, and others) as specified by dependency on
  MAIL-TRANSPORT-AGENT in DEPENDS
EOF
