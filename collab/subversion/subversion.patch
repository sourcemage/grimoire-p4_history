diff -urN subversion-r1868/subversion/libsvn_ra_dav/commit.c subversion/subversion/libsvn_ra_dav/commit.c
--- subversion-r1868/subversion/libsvn_ra_dav/commit.c	2002-05-03 11:58:55.000000000 -0400
+++ subversion/subversion/libsvn_ra_dav/commit.c	2002-05-31 23:25:22.000000000 -0400
@@ -449,7 +449,7 @@
 {
   int code;
   const char *locn = NULL;
-  struct uri parse;
+  ne_uri parse;
   svn_error_t *err;
 
   if (res->wr_url != NULL)
@@ -493,9 +493,9 @@
   /* The location is an absolute URI. We want just the path portion. */
   /* ### what to do with the rest? what if it points somewhere other
      ### than the current session? */
-  uri_parse(locn, &parse, NULL);
+  ne_uri_parse(locn, &parse);
   res->wr_url = apr_pstrdup(cc->ras->pool, parse.path);
-  uri_free(&parse);
+  ne_uri_free(&parse);
   free((void *)locn);
 
   return SVN_NO_ERROR;
diff -urN subversion-r1868/subversion/libsvn_ra_dav/fetch.c subversion/subversion/libsvn_ra_dav/fetch.c
--- subversion-r1868/subversion/libsvn_ra_dav/fetch.c	2002-05-03 11:58:55.000000000 -0400
+++ subversion/subversion/libsvn_ra_dav/fetch.c	2002-05-31 23:25:22.000000000 -0400
@@ -352,7 +352,7 @@
                                    apr_pool_t *pool)
 {
   apr_hash_t *dirents;
-  struct uri parsed_url;
+  ne_uri parsed_url;
   apr_hash_index_t *hi;
 
   /* Fetch all properties so we can snarf ones out of the svn:custom
@@ -383,7 +383,7 @@
    * :-)
    */
 
-  uri_parse(url, &parsed_url, NULL);
+  ne_uri_parse(url, &parsed_url);
 
   for (hi = apr_hash_first(pool, dirents); hi; hi = apr_hash_next(hi))
     {
@@ -395,7 +395,7 @@
 
       if (r->is_collection)
         {
-          if (uri_compare(parsed_url.path, r->url) == 0)
+          if (ne_uri_cmp(parsed_url.path, r->url) == 0)
             {
               /* don't insert "this dir" into the set of subdirs */
 
@@ -422,7 +422,7 @@
         }
     }
 
-  uri_free(&parsed_url);
+  ne_uri_free(&parsed_url);
 
   return SVN_NO_ERROR;
 }
diff -urN subversion-r1868/subversion/libsvn_ra_dav/props.c subversion/subversion/libsvn_ra_dav/props.c
--- subversion-r1868/subversion/libsvn_ra_dav/props.c	2002-05-03 11:58:55.000000000 -0400
+++ subversion/subversion/libsvn_ra_dav/props.c	2002-05-31 23:25:22.000000000 -0400
@@ -132,7 +132,7 @@
 static void *create_private(void *userdata, const char *url)
 {
   prop_ctx_t *pc = userdata;
-  struct uri parsed_url;
+  ne_uri parsed_url;
   char *url_path;
   svn_ra_dav_resource_t *r = apr_pcalloc(pc->pool, sizeof(*r));
   apr_size_t len;
@@ -148,11 +148,11 @@
   /* parse the PATH element out of the URL
 
      Note: mod_dav does not (currently) use an absolute URL, but simply a
-     server-relative path (i.e. this uri_parse is effectively a no-op).
+     server-relative path (i.e. this ne_uri_parse is effectively a no-op).
   */
-  (void) uri_parse(url_str->data, &parsed_url, NULL);
+  (void) ne_uri_parse(url_str->data, &parsed_url);
   url_path = apr_pstrdup(pc->pool, parsed_url.path);
-  uri_free(&parsed_url);
+  ne_uri_free(&parsed_url);
 
   /* clean up trailing slashes from the URL */
   len = strlen(url_path);
@@ -467,7 +467,7 @@
 {
   svn_ra_dav_resource_t *rsrc;
   const char *vcc;
-  struct uri parsed_url;
+  ne_uri parsed_url;
   const char *my_bc_url, *my_bc_relative;
   const char *lopped_path = "";
 
@@ -496,7 +496,7 @@
 
   /* Split the url into it's component pieces (schema, host, path,
      etc).  We want the path part. */
-  uri_parse (url, &parsed_url, NULL);
+  ne_uri_parse (url, &parsed_url);
 
   /* ### do we want to optimize the props we fetch, based on what the
      ### user has requested? i.e. omit resourcetype when is_dir is NULL
@@ -509,7 +509,7 @@
        starting_props from parent directories. */
     svn_error_t *err;
     svn_stringbuf_t *path_s = svn_stringbuf_create (parsed_url.path, pool);
-    uri_free(&parsed_url);
+    ne_uri_free(&parsed_url);
 
     while (! svn_path_is_empty (path_s))
       {
diff -urN subversion-r1868/subversion/libsvn_ra_dav/ra_dav.h subversion/subversion/libsvn_ra_dav/ra_dav.h
--- subversion-r1868/subversion/libsvn_ra_dav/ra_dav.h	2002-05-03 11:58:54.000000000 -0400
+++ subversion/subversion/libsvn_ra_dav/ra_dav.h	2002-05-31 23:25:22.000000000 -0400
@@ -44,7 +44,7 @@
   apr_pool_t *pool;
 
   const char *url;              /* original, unparsed url for this session */
-  struct uri root;              /* parsed version of above */
+  ne_uri root;              /* parsed version of above */
 
   ne_session *sess;           /* HTTP session to server */
   ne_session *sess2;
diff -urN subversion-r1868/subversion/libsvn_ra_dav/session.c subversion/subversion/libsvn_ra_dav/session.c
--- subversion-r1868/subversion/libsvn_ra_dav/session.c	2002-05-03 11:58:55.000000000 -0400
+++ subversion/subversion/libsvn_ra_dav/session.c	2002-05-31 23:25:22.000000000 -0400
@@ -317,22 +317,22 @@
   const char *repository = repos_URL->data;
   apr_size_t len;
   ne_session *sess, *sess2;
-  struct uri uri = { 0 };
+  ne_uri uri = { 0 };
   svn_ra_session_t *ras;
   int is_ssl_session;
 
   /* Sanity check the URI */
-  if (uri_parse(repository, &uri, NULL) 
+  if (ne_uri_parse(repository, &uri) 
       || uri.host == NULL || uri.path == NULL)
     {
-      uri_free(&uri);
+      ne_uri_free(&uri);
       return svn_error_create(SVN_ERR_RA_ILLEGAL_URL, 0, NULL, pool,
                               "illegal URL for repository");
     }
 
   /* Can we initialize network? */
-  if (sock_init() != 0) {
-    uri_free(&uri);
+  if (ne_sock_init() != 0) {
+    ne_uri_free(&uri);
     return svn_error_create(SVN_ERR_RA_SOCK_INIT, 0, NULL, pool,
                             "network socket initialization failed");
   }
@@ -354,7 +354,7 @@
         }
       if (ne_supports_ssl() == 0)
         {
-          uri_free(&uri);
+          ne_uri_free(&uri);
           return svn_error_create(SVN_ERR_RA_SOCK_INIT, 0, NULL, pool,
                                   "SSL is not supported");
         }
diff -urN subversion-r1868/subversion/libsvn_ra_dav/util.c subversion/subversion/libsvn_ra_dav/util.c
--- subversion-r1868/subversion/libsvn_ra_dav/util.c	2002-05-03 11:58:54.000000000 -0400
+++ subversion/subversion/libsvn_ra_dav/util.c	2002-05-31 23:25:22.000000000 -0400
@@ -32,18 +32,18 @@
 
 void svn_ra_dav__copy_href(svn_stringbuf_t *dst, const char *src)
 {
-  struct uri parsed_url;
+  ne_uri parsed_url;
 
   /* parse the PATH element out of the URL and store it.
 
      ### do we want to verify the rest matches the current session?
 
      Note: mod_dav does not (currently) use an absolute URL, but simply a
-     server-relative path (i.e. this uri_parse is effectively a no-op).
+     server-relative path (i.e. this ne_uri_parse is effectively a no-op).
   */
-  (void) uri_parse(src, &parsed_url, NULL);
+  (void) ne_uri_parse(src, &parsed_url);
   svn_stringbuf_set(dst, parsed_url.path);
-  uri_free(&parsed_url);
+  ne_uri_free(&parsed_url);
 }
 
 svn_error_t *svn_ra_dav__convert_error(ne_session *sess,
diff -urN subversion-r1868/subversion/mod_dav_svn/util.c subversion/subversion/mod_dav_svn/util.c
--- subversion-r1868/subversion/mod_dav_svn/util.c	2002-05-03 11:59:33.000000000 -0400
+++ subversion/subversion/mod_dav_svn/util.c	2002-05-31 23:25:20.000000000 -0400
@@ -122,7 +122,7 @@
   const char *slash;
 
   /* parse the input URI, in case it is more than just a path */
-  if (apr_uri_parse(pool, uri, &comp) != APR_SUCCESS)
+  if (apr_ne_uri_parse(pool, uri, &comp) != APR_SUCCESS)
     goto malformed_uri;
 
   /* ### ignore all URI parts but the path (for now) */
