## conditionally run `make' if SWIG dependency is on
## @usage <1:make target>
function make_if_swig() {
  if echo "$OPTS" | grep -q 'with-swig'; then
    make $1
  fi
}

(

  SVN_CLIENT=$(which svn 2>/dev/null)

  message "${MESSAGE_COLOR}Checking for Apache 2.x${DEFAULT_COLOR}" &&
  httpd -v | grep -q 'Apache/2\.'                                   &&

  message "${MESSAGE_COLOR}Checking for mod_dav.so Apache module${DEFAULT_COLOR}" &&
  [ -e /usr/libexec/mod_dav.so ]                                                  &&

  if [ "$SVN_EXPORT_HEAD" == 'y' ]; then
#   Client executable may be available but not working, so we need an extra check
    if [ -z "$SVN_CLIENT" ] || ! $SVN_CLIENT --version >/dev/null 2>&1; then
      message "${MESSAGE_COLOR}Subversion will build a client to bootstrap to the Subversion project${DEFAULT_COLOR}" &&
      message "${MESSAGE_COLOR}repository and check out the latest client and Apache 2 module source${DEFAULT_COLOR}" &&
      message "${MESSAGE_COLOR}code. Then, these will be built and installed.${DEFAULT_COLOR}"                        &&

#     Build static client to bootstrap to repository
      ./configure                \
        --build=$BUILD           \
        --prefix=/usr            \
        --sysconfdir=/etc        \
        --localstatedir=/var     \
        --disable-shared         \
        --disable-dso            \
        --without-apxs           \
        --enable-maintainer-mode &&
      make                       &&

      SVN_CLIENT=$(pwd)/subversion/clients/cmdline/svn
    fi &&

#   Download HEAD revision
    message "${MESSAGE_COLOR}Using client: ${SVN_CLIENT}${DEFAULT_COLOR}" &&
    $SVN_CLIENT --version | head -2 &&
    $SVN_CLIENT \
      --non-interactive \
      --no-auth-cache \
      export \
      http://svn.collab.net/repos/svn/trunk \
      trunk-HEAD &&
    cd trunk-HEAD
  fi &&

#
# -=* ACTUAL BUILD *=-
#

  message "${MESSAGE_COLOR}Starting actual build...${DEFAULT_COLOR}" &&

  if ! [ -x configure ]; then ./autogen.sh; fi &&
  ./configure \
    --build=$BUILD \
    --prefix=/usr \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --disable-debug \
    --disable-static \
    --enable-dso \
    --disable-mod-activation \
    --enable-shared \
    --with-apxs \
    $OPTS &&
  make &&
  make_if_swig swig-py &&

# Use this instead of just 'make' for -jN option:
# make -jN external-all
# make -jN local-all

# Install
  prepare_install &&
  make install &&
  make_if_swig install-swig-py

) >$C_FIFO 2>&1 && (

  cat > /etc/httpd/svn.conf.default << __EOF__
#
# See INSTALL and Apache security manuals for more details
#
<Location /svn>
	#
	# This will give anyone unrestricted access to the repositories
	# located at /absolute/path/to/repositories/parent/directory
	#
	DAV svn
	SVNParentPath /absolute/path/to/repositories/parent/directory

	#
	# If you want limited access, read or write, you add these lines:
	#
	AuthType Basic
	AuthName "Subversion repository"
	AuthUserFile /path/to/passwd

	#
	# ...and...
	#
	# a) For a read/write restricted repository:
	#

	Require valid-user

	#
	# b) For a write restricted repository:
	#    NOTE: prop{get|set} operations are not protected by this
	#

	<LimitExcept GET PROPFIND OPTIONS REPORT>
		Require valid-user
	</LimitExcept>

	#
	# c) For seperate restricted read and write access:
	#    NOTE: prop{get|set} operations are not protected by this
	#

	AuthGroupFile /path/to/group
	<LimitExcept GET PROPFIND OPTIONS REPORT>
		Require group svn_committers
	</LimitExcept>
	<Limit GET PROPFIND OPTIONS REPORT>
		Require group svn_committers
		Require group svn_readers
	</Limit>
</Location>
__EOF__

  if spell_installed Python; then
#    # set library paths
#    WD=$(pwd)
#    for d in $(find subversion/ -maxdepth 1 -name 'lib*' -a -type d); do
#      LD_LIBRARY_PATH="$LD_LIBRARY_PATH${LD_LIBRARY_PATH:+:}$WD/$d/.libs/"
#    done &&
#    export LD_LIBRARY_PATH &&
#    # run tests
    make check
  fi

)
