         VERSION=0.4.0
     SOURCE_HASH='sha512:55a83d4c7faab44eb14098743afdc226a246eadb9fde2218d4e8dcd50f5da1fb8e8f7df965d23a1780251370898bf786764c359fbe94ba3b7b0a0ec247551dca'
         UPDATED=20051125
           SPELL=pear-scriptreorganizer
    PEAR_PACKAGE=ScriptReorganizer
        WEB_SITE=http://pear.php.net/package/ScriptReorganizer/
      LICENSE[0]=LGPL
        KEYWORDS="php"
           SHORT='PEAR: Library/Tool focusing exclusively on the file'
cat << EOF
ScriptReorganizer has the ability to reorganize
source code in different (incremental) ways:
- File: one-to-one (Script) or many-to-one
(Library) optimization.
- Source: EOL (Route), comment (Quiet) and
whitespace (Pack) optimization.
Plugin functionality is available by means of
the Decorator Pattern.
It is highly recommended to follow the best
practice detailed out below, when using this
package:
1. Running of all tests before building
releases to deploy.
2. Reorganization of the source code file(s)
with ScriptReorganizer.
3. Running of all tests - not only unit tests!
4. Final building of the release to deploy.
If the extreme mode of the pack strategy is
used for packaging, a non-ScriptReorganized
source code tree should be shipped together
with the optimized one, to enable third parties
to track down undiscoverd bugs.
Same applies for (complex) applications that
are pharized, i.e. optimized and packaged with
PHP_Archive, as well as for bcompiled scripts.
ANN: Currently only 'pure' PHP code can be
reorganized. Look into the folder
<root/>PEAR/docs/ScriptReorganizer for more
information in depth.
EOF

source  $SECTION_DIRECTORY/PEAR_DETAILS
