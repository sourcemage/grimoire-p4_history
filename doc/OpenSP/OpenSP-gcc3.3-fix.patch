--- include/Attribute.h	2003-07-13 13:20:56.000000000 +0200
+++ include/Attribute.h.fixed	2003-07-13 13:20:49.000000000 +0200
@@ -31,6 +31,27 @@
 class AttributeContext;
 class Syntax;
 
+class SP_API AttributeValue : public Resource {
+public:
+  enum Type {
+    implied,
+    cdata,
+    tokenized
+    };
+  AttributeValue();
+  virtual ~AttributeValue();
+  virtual AttributeSemantics *makeSemantics(const DeclaredValue *,
+					    AttributeContext &,
+					    const StringC &,
+					    unsigned &,
+					    unsigned &) const;
+  virtual Type info(const Text *&, const StringC *&) const = 0;
+  virtual const Text *text() const;
+  virtual Boolean recoverUnquoted(const StringC &, const Location &,
+				  AttributeContext &, const StringC &);
+  static Boolean handleAsUnterminated(const Text &, AttributeContext &);
+};
+
 class SP_API AttributeDefinitionDesc {
 public:
   AttributeDefinitionDesc() { }
@@ -380,27 +401,6 @@
   ConstPtr<Notation> notation_;
 };
 
-class SP_API AttributeValue : public Resource {
-public:
-  enum Type {
-    implied,
-    cdata,
-    tokenized
-    };
-  AttributeValue();
-  virtual ~AttributeValue();
-  virtual AttributeSemantics *makeSemantics(const DeclaredValue *,
-					    AttributeContext &,
-					    const StringC &,
-					    unsigned &,
-					    unsigned &) const;
-  virtual Type info(const Text *&, const StringC *&) const = 0;
-  virtual const Text *text() const;
-  virtual Boolean recoverUnquoted(const StringC &, const Location &,
-				  AttributeContext &, const StringC &);
-  static Boolean handleAsUnterminated(const Text &, AttributeContext &);
-};
-
 class SP_API ImpliedAttributeValue : public AttributeValue {
 public:
   ImpliedAttributeValue();
--- include/RangeMap.cxx~	2000-02-25 17:55:21.000000000 +0100
+++ include/RangeMap.cxx	2004-05-29 17:28:18.366688527 +0200
@@ -7,6 +7,7 @@
 #include "RangeMap.h"
 #include "ISet.h"
 #include "types.h"
+#include "constant.h"
 
 #ifdef SP_NAMESPACE
 namespace SP_NAMESPACE {
