           SPELL=ipython
         VERSION=0.7.0
     SOURCE_HASH='sha512:d45a2befe032b1f320b747b73e55e286269e67f981f5c47c8e46079b489372460ae1cf97f907f4b559077db55d709f510040deff08c05298b4393358c3dd9b6e'
          SOURCE=$SPELL-$VERSION.tar.gz
            DOCS='README* doc/*'
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=http://ipython.scipy.org/dist/$SOURCE
      LICENSE[0]=BSD
        WEB_SITE=http://$SPELL.scipy.org/
       BUILD_API=2
     GATHER_DOCS=off
         UPDATED=20060122
           SHORT='IPython is interactive Python interpreter'
cat << EOF
IPython is a free software project (released under the BSD license) which tries to:

1. Provide an interactive shell superior to Python's default. IPython has many
   features for object introspection, system shell access, and its own special
   command system for adding functionality when working interactively. It tries
   to be a very efficient environment both for Python code development and for
   exploration of problems using Python objects (in situations like data
   analysis).
2. Serve as an embeddable, ready to use interpreter for your own programs.
   IPython can be started with a single call from inside another program,
   providing access to the current namespace. This can be very useful both for
   debugging purposes and for situations where a blend of batch-processing and
   interactive exploration are needed.
3. Offer a flexible framework which can be used as the base environment for
   other systems with Python as the underlying language. Specifically
   scientific environments like Mathematica, IDL and Mathcad inspired its
   design, but similar ideas can be useful in many fields.
4. Allow interactive testing of threaded graphical toolkits. IPython has support
   for interactive, non-blocking control of GTK, Qt and WX applications via
   special threading flags. The normal Python shell can only do this for Tkinter
   applications.
EOF
