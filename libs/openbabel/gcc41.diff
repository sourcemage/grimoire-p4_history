diff -uNr openbabel-2.0.0.old/src/fingerprint.h openbabel-2.0.0/src/fingerprint.h
--- openbabel-2.0.0.old/src/fingerprint.h	2005-11-26 23:19:45.000000000 +0100
+++ openbabel-2.0.0/src/fingerprint.h	2006-03-25 15:56:09.000000000 +0100
@@ -60,7 +60,7 @@
 	static double Tanimoto(const std::vector<unsigned int>& vec1, const std::vector<unsigned int>& vec2);
 	
 	/// Inline version of Tanimoto() taking a pointer for the second vector
-	static double OBFingerprint::Tanimoto(const std::vector<unsigned int>& vec1, const unsigned int* p2) 
+	static double Tanimoto(const std::vector<unsigned int>& vec1, const unsigned int* p2) 
 	{
 		///If used for two vectors, vec1 and vec2, call as Tanimoto(vec1, &vec2[0]);
 		int andbits=0, orbits=0;
diff -uNr openbabel-2.0.0.old/src/formats/copyformat.cpp openbabel-2.0.0/src/formats/copyformat.cpp
--- openbabel-2.0.0.old/src/formats/copyformat.cpp	2005-11-26 23:19:51.000000000 +0100
+++ openbabel-2.0.0/src/formats/copyformat.cpp	2006-03-25 15:54:08.000000000 +0100
@@ -41,7 +41,7 @@
   };
 
 	/////////////////////////////////////////////////////////////////
-	virtual bool CopyFormat::WriteChemObject(OBConversion* pConv)
+	virtual bool WriteChemObject(OBConversion* pConv)
 	{
 		pConv->GetChemObject();//needed to increment pConv->Index
 
diff -uNr openbabel-2.0.0.old/src/formats/crkformat.cpp openbabel-2.0.0/src/formats/crkformat.cpp
--- openbabel-2.0.0.old/src/formats/crkformat.cpp	2005-11-26 23:19:51.000000000 +0100
+++ openbabel-2.0.0/src/formats/crkformat.cpp	2006-03-25 15:55:07.000000000 +0100
@@ -61,8 +61,8 @@
     virtual bool ReadMolecule(OBBase* pOb, OBConversion* pConv);
     virtual bool WriteMolecule(OBBase* pOb, OBConversion* pConv);
 
-    static bool CRK2DFormat::ReadCRK(std::istream &ifs,OBMol &mol,const char *classTag);
-    static void CRK2DFormat::WriteCRK(std::ostream &ofs,OBMol &mol,bool GroupCharges);
+    static bool ReadCRK(std::istream &ifs,OBMol &mol,const char *classTag);
+    static void WriteCRK(std::ostream &ofs,OBMol &mol,bool GroupCharges);
 
 };
 
diff -uNr openbabel-2.0.0.old/src/formats/xml/cmlreactlformat.cpp openbabel-2.0.0/src/formats/xml/cmlreactlformat.cpp
--- openbabel-2.0.0.old/src/formats/xml/cmlreactlformat.cpp	2005-11-26 23:19:57.000000000 +0100
+++ openbabel-2.0.0/src/formats/xml/cmlreactlformat.cpp	2006-03-25 15:51:06.000000000 +0100
@@ -51,7 +51,7 @@
 \n";
 	}
 
-  unsigned CMLReactFormat::Flags()
+  unsigned Flags()
   {
     return 0;
   }
diff -uNr openbabel-2.0.0.old/src/formats/xml/xmlformat.cpp openbabel-2.0.0/src/formats/xml/xmlformat.cpp
--- openbabel-2.0.0.old/src/formats/xml/xmlformat.cpp	2005-11-26 23:19:57.000000000 +0100
+++ openbabel-2.0.0/src/formats/xml/xmlformat.cpp	2006-03-25 15:52:14.000000000 +0100
@@ -21,12 +21,12 @@
 class XMLFormat : XMLBaseFormat
 {
 public:
-	XMLFormat::XMLFormat()
+	XMLFormat()
   {
       OBConversion::RegisterFormat("xml",this);
   }
 
-  const char* XMLFormat::Description()
+  const char* Description()
   {
       return " \
 General XML format\n \
@@ -40,7 +40,7 @@
 
 	const char* NamespaceURI()const{return "Undefined";};
 
-  unsigned XMLFormat::Flags()
+  unsigned Flags()
   {
     return NOTWRITABLE;
   }
diff -uNr openbabel-2.0.0.old/src/formats/xml/xml.h openbabel-2.0.0/src/formats/xml/xml.h
--- openbabel-2.0.0.old/src/formats/xml/xml.h	2005-11-26 23:19:57.000000000 +0100
+++ openbabel-2.0.0/src/formats/xml/xml.h	2006-03-25 15:50:31.000000000 +0100
@@ -41,8 +41,8 @@
 		///Frees reader and writer if necessary
 		~XMLConversion();
 
-	bool XMLConversion::SetupReader();///< opens libxml2 reader
-	bool XMLConversion::SetupWriter();///< opens libxml2 writer
+	bool SetupReader();///< opens libxml2 reader
+	bool SetupWriter();///< opens libxml2 writer
 
 	///Parses the input xml stream and sends each element to the format's callback routines
 	bool ReadXML(XMLBaseFormat* pFormat, OBBase* pOb);
@@ -57,7 +57,7 @@
 		return *nsm;
 	};
 
-	static void XMLConversion::RegisterXMLFormat(XMLBaseFormat* pFormat,
+	static void RegisterXMLFormat(XMLBaseFormat* pFormat,
 			bool IsDefault=false, const char* uri=NULL);
 
 	///Returns the extended OBConversion class, making it if necessary
@@ -65,9 +65,9 @@
 
 	///Because OBConversion::Convert is still using the unextended OBConversion object
 	///we need to obtain the conversion paramters from it when requested
-	bool XMLConversion::IsLast()
+	bool IsLast()
 	{ return _pConv->IsLast(); }
-	int XMLConversion::GetOutputIndex()
+	int GetOutputIndex()
 	{ return  _pConv->GetOutputIndex(); }
 
 
@@ -96,7 +96,7 @@
 	string GetAttribute(const char* attrname);
 
 	///Sets value to element content. Returns false if there is no content. 
-	string XMLConversion::GetContent();
+	string GetContent();
 
 	///Sets value to element content as an integer. Returns false if there is no content. 
 	bool    GetContentInt(int& value);
diff -uNr openbabel-2.0.0.old/src/zipstreamimpl.h openbabel-2.0.0/src/zipstreamimpl.h
--- openbabel-2.0.0.old/src/zipstreamimpl.h	2005-11-26 23:19:48.000000000 +0100
+++ openbabel-2.0.0/src/zipstreamimpl.h	2006-03-25 16:01:08.000000000 +0100
@@ -73,7 +73,7 @@
                       window_size, memory_level,
                       static_cast<int>(strategy));
 
-    setp( &(_buffer[0]), &(_buffer[_buffer.size()-1]));
+    this->setp( &(_buffer[0]), &(_buffer[_buffer.size()-1]));
 }
 
 /** Destructor
@@ -123,7 +123,7 @@
     }
     if (zip_to_stream(this->pbase(), w))
     {
-        setp(this->pbase(), this->epptr() - 1);
+        this->setp(this->pbase(), this->epptr() - 1);
         return c;
     }
     else
