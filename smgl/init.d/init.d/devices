#!/bin/sh

PROGRAM=/bin/false
RUNLEVEL=DEV
ESSENTIAL=yes

. /etc/init.d/smgl_init
. /etc/sysconfig/devices

start_devfs()
{
  if ! [ -e /dev/.devfsd ]
  then echo "Mounting devfs on /dev"
       mount -n -t devfs devfs /dev
       evaluate_retval
  fi

  echo "Telling init to reopen file descriptors"
  kill -USR1 1

  if [ -x "/sbin/devfsd" ] ; then
    echo "Starting devfsd"
    /sbin/devfsd /dev
    evaluate_retval
  else
    ln -sf /proc/self/fd /dev/fd
    ln -sf /dev/fd/0 /dev/stdin
    ln -sf /dev/fd/1 /dev/stdout
    ln -sf /dev/fd/2 /dev/stderr
  fi
}

start_udev()
{ (
  . /etc/udev/udev.conf
  # mount sysfs
  echo "Mounting sysfs at /sys"
  mount -n -t sysfs none /sys
  # mount proc
  echo "Mounting /proc"
  mount -n -t proc none /proc
  echo "Mounting ramfs at $udev_root"
  mount -n -t ramfs none $udev_root
  # create some needed stuff
  ln -s /proc/self/fd $udev_root/fd
  ln -s /dev/fd/0 $udev_root/stdin
  ln -s /dev/fd/1 $udev_root/stdout
  ln -s /dev/fd/2 $udev_root/stderr
  mkdir $udev_root/shm
  mkdir $udev_root/pts
  # propogate /udev from /sys - we only need this while we do not
  # have initramfs and an early user-space with which to do early
  # device bring up
  echo "Creating initial udev device nodes"
  /sbin/udevstart
  if [ -f /etc/udev/udev.missing ]; then
    echo "Processing /etc/udev/udev.missing"
    cd /dev
    while read line; do
      if [ "${line:0:1}" == "#" ]; then continue; fi
      for ((i=0; i<7; i++)); do
        val[$i]=${line%%:*}
        line=${line#*:}
      done
      if [ "${val[1]}" == "d" ]; then
        mkdir ${val[0]}
      else
        mknod ${val[0]} ${val[1]} ${val[2]} ${val[3]}
      fi
      chmod ${val[4]} ${val[0]}
      chown ${val[5]}:${val[6]} ${val[0]}
    done < /etc/udev/udev.missing
    cd /
  fi
  echo "Telling init to reopen file descriptors"
  kill -USR1 1
  echo "Starting udevd"
  /sbin/udevd &
) }

start_static()
{
   exit 0
}

start()
{
  eval "start_$DEVICES"
}

stop() { exit 0; }
restart() { exit 3; }
reload() { exit 3; }
force_reload() { exit 3; }
status() { exit 3; }

usage()
{
  echo "Usage: $0 {start|stop}"
  echo "Warning: Do not run this script manually!"
}
