. ${SCRIPT_DIRECTORY}/details.conf
if [[ "$mode" == "newktree" ]]
then
	mk_source_dir $SOURCE_DIRECTORY 

	echo "This is the linux source: $SOURCE" &&
	cd ${SOURCE_DIRECTORY}
	unpack $SOURCE ${MD5[0]}
	cd linux-${KERNEL_VERSION}
	
	. ${SCRIPT_DIRECTORY}/functions
	. ${SCRIPT_DIRECTORY}/latest.defaults
	. ${CONFIG_CACHE}/details.conf
	for patch in $patches
	do
		case "$patch" in
			LATEST*)
				patch=${!patch}
				;;
			*)
				;;
		esac
		pval=1
		. ${SCRIPT_DIRECTORY}/info/patches/*/${patch}
		cp ${INSTALL_ROOT}/var/spool/sorcery/${source} ./
		unpack ${source} ${md5sum}
		linux_new_uncompress ./${source}
		patch -p${pval} <${patch}
	done

	if [[ $patchversion == "" ]]
	then
		append=$VERSION
	else
		append=$patchversion
	fi
	. ${SCRIPT_DIRECTORY}/details.defaults
	[ -d ${BUILD_DIRECTORY}/linux-$append ] && 
	rm -r ${BUILD_DIRECTORY}/linux-$append
	mkdir ${BUILD_DIRECTORY}/linux-$append
	mv ./* ${BUILD_DIRECTORY}/linux-$append/ 
	LINUX_SOURCE_DIRECTORY=${BUILD_DIRECTORY}/linux-$append
	export LINUX_SOURCE_DIRECTORY
elif [[ "$mode" == "oldktree" ]]
then
	LINUX_SOURCE_DIRECTORY=$old_src_tree
	export LINUX_SOURCE_DIRECTORY
else
	echo "I don't know what $mode is"
	return 1
fi
cd ${LINUX_SOURCE_DIRECTORY}

. ${SCRIPT_DIRECTORY}/details.conf
if [[ "$RECONFIGURE" == "true" || ! -f ./.config ]]
then
	if [[ $COMPILE ]]
	then
		make mrproper
	fi
	if [ "${output_dir}" == "" ]
	then
		cp ${INSTALL_ROOT}/${CONFIG_CACHE}/kernel.config-${VERSION} ./.config
		ARCH="${kernel_arch}" make $MAKEMODE
		cp ./.config ${INSTALL_ROOT}/${CONFIG_CACHE}/kernel.config-${VERSION}
	else
		mkdir -p ${output_dir}
		cp ${INSTALL_ROOT}/${CONFIG_CACHE}/kernel.config "${output_dir}"
		ARCH="${kernel_arch}" make O="${output_dir}" $MAKEMODE
		cp ${output_dir}/.config ${INSTALL_ROOT}/${CONFIG_CACHE}/kernel.config
	fi
fi
