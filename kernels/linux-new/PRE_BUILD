if [[ "$mode" == "newktree" ]]
then
	mk_source_dir $SOURCE_DIRECTORY 
fi
cd ${SOURCE_DIRECTORY} &&
echo "This is the linux source: $SOURCE" &&
if [[ "$mode" == "newktree" ]]
then
	unpack $SOURCE ${MD5[0]} 
fi
cd linux-$VERSION 
if [[ "$mode" == "newktree" ]]
then
	counter="1"
	tmppatch="PATCH[${counter}]"
	. ${SCRIPT_DIRECTORY}/functions
	while [[ ${!tmppatch} ]]
	do
		tmpsrc="SOURCE${counter}"
		tmpmd5="MD5[${counter}]"
		tmppatch="PATCH[${counter}]"
		. ${SCRIPT_DIRECTORY}/info/patches/*/${!tmppatch}
		cp ${INSTALL_ROOT}/var/spool/sorcery/${!tmpsrc} ./
		unpack ${!tmpsrc} ${tmpmd5}
		linux_new_uncompress ./${!tmpsrc}
		patch -p${pval} <${!tmppatch}
		counter="`expr $counter + 1`"
		tmppatch="PATCH[${counter}]"
	done

	if [[ $patchversion == "" ]]
	then
		append=$VERSION
	else
		append=$patchversion
	fi
	[ -d ${BUILD_DIRECTORY}/linux-$append ] && 
	rm -r ${BUILD_DIRECTORY}/linux-$append
	mkdir ${BUILD_DIRECTORY}/linux-$append
	mv ./* ${BUILD_DIRECTORY}/linux-$append/ 
	LINUX_SOURCE_DIRECTORY=${BUILD_DIRECTORY}/linux-$append
	export LINUX_SOURCE_DIRECTORY
elif [[ "$mode" == "oldktree" ]]
then
	LINUX_SOURCE_DIRECTORY=$old_src_tree
	export LINUX_SOURCE_DIRECTORY
else
	echo "I don't know what $mode is"
	exit 1
fi
cd ${LINUX_SOURCE_DIRECTORY}
if [[ "$mode" == "newktree" || $RECONFIGURE ]]
then
	cp ${INSTALL_ROOT}/${CONFIG_CACHE}/kernel.config ./.config
	make $MAKEMODE
	cp ./.config ${INSTALL_ROOT}/${CONFIG_CACHE}/kernel.config
fi
