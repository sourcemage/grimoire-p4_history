diff -Naur gaim-rss-project/src/channels.c gaim-rss-project-binesh/src/channels.c
--- gaim-rss-project/src/channels.c	2004-07-07 08:57:41.000000000 -0400
+++ gaim-rss-project-binesh/src/channels.c	2004-09-02 14:49:14.000000000 -0400
@@ -2,6 +2,7 @@
 #include <glib.h>
 #include <gtk/gtk.h>
 #include <gdk/gdk.h>
+#include <pthread.h>
 
 #ifdef HAVE_CONFIG_H
 # include "../grr_config.h"
@@ -26,7 +27,7 @@
 static GList *channel_list = NULL;
 static GHashTable *channel_hash = NULL;
 
-static GStaticMutex mutex = G_STATIC_MUTEX_INIT;
+static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
 
 static gboolean running = TRUE;
 
@@ -38,30 +39,30 @@
 
 void channels_lock()
 {
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 }
 
 void channels_unlock()
 {
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 gboolean need_update()
 {
     gboolean ret = FALSE;
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     if(_need_update)
         ret = TRUE;
     _need_update = FALSE;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
     return ret;
 }
 
 void update_immediately()
 {
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     _need_update = TRUE;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 
@@ -69,7 +70,7 @@
 {
     GList *feeds = NULL;
 
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 
     if(channel_list!=NULL)
     {
@@ -100,7 +101,7 @@
 	}
     }
 
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 GList* get_channel_list()
@@ -113,7 +114,7 @@
 {
     Channel *ret = NULL;
 
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 
     if(channel_hash==NULL)
 	channel_hash = g_hash_table_new(g_str_hash, g_str_equal);
@@ -123,7 +124,7 @@
     if(ret!=NULL)
 	ret = rss_channel_new_copy(ret);
 
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 
     return ret;
 }
@@ -133,7 +134,7 @@
 {
     Channel *o = NULL;
 
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 
     if(channel_hash==NULL)
         channel_hash = g_hash_table_new(g_str_hash, g_str_equal);
@@ -144,7 +145,7 @@
 
     g_hash_table_replace(channel_hash, g_strdup(c->url), c);
 
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 
@@ -158,7 +159,7 @@
 
 	//g_print("copying clist...\n");
 
-	g_static_mutex_lock(&mutex);
+	pthread_mutex_lock(&mutex);
 	d = channel_list;
 	while(d!=NULL)
 	{
@@ -171,7 +172,7 @@
 				  );
 	    d = g_list_next(d);
 	}
-        g_static_mutex_unlock(&mutex);
+        pthread_mutex_unlock(&mutex);
 
         //g_print("updating channels...\n");
 
@@ -213,32 +214,32 @@
 
 void start_updater()
 {
-    GError *error;
-    g_thread_create(_updater_thread, NULL, TRUE, &error);
+    pthread_t pt;
+    pthread_create(&pt,NULL,_updater_thread, NULL);
 }
 
 void start_single_updater(gchar *name, gchar *url)
 {
-    GError *error;
     Channel *c1 = rss_channel_new(name, url, "");
+    pthread_t pt;
 
-    g_thread_create(_single_updater_thread, c1, TRUE, &error);
+    pthread_create(&pt,NULL,_single_updater_thread, c1);
 }
 
 
 void set_timeout(guint atimeout)
 {
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     timeout = atimeout;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 guint get_timeout()
 {
     guint ret;
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     ret = timeout;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
     return ret;
 }
 
diff -Naur gaim-rss-project/src/channels.c.static gaim-rss-project-binesh/src/channels.c.static
--- gaim-rss-project/src/channels.c.static	2004-07-07 08:57:41.000000000 -0400
+++ gaim-rss-project-binesh/src/channels.c.static	2004-09-02 14:51:57.000000000 -0400
@@ -2,6 +2,7 @@
 #include <glib.h>
 #include <gtk/gtk.h>
 #include <gdk/gdk.h>
+#include <pthread.h>
 
 #ifdef HAVE_CONFIG_H
 # include "../grr_config.h"
@@ -26,7 +27,7 @@
 static GList *channel_list = NULL;
 static GHashTable *channel_hash = NULL;
 
-static GStaticMutex mutex = G_STATIC_MUTEX_INIT;
+static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
 
 static gboolean running = TRUE;
 
@@ -40,19 +41,19 @@
 gboolean need_update()
 {
     gboolean ret = FALSE;
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     if(_need_update)
         ret = TRUE;
     _need_update = FALSE;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
     return ret;
 }
 
 void update_immediately()
 {
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     _need_update = TRUE;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 
@@ -60,7 +61,7 @@
 {
     GList *feeds = NULL;
 
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 
     if(channel_list!=NULL)
     {
@@ -91,7 +92,7 @@
 	}
     }
 
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 GList* get_channel_list()
@@ -104,7 +105,7 @@
 {
     Channel *ret = NULL;
 
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 
     if(channel_hash==NULL)
 	channel_hash = g_hash_table_new(g_str_hash, g_str_equal);
@@ -114,7 +115,7 @@
     if(ret!=NULL)
 	ret = rss_channel_new_copy(ret);
 
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 
     return ret;
 }
@@ -124,7 +125,7 @@
 {
     Channel *o = NULL;
 
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
 
     if(channel_hash==NULL)
         channel_hash = g_hash_table_new(g_str_hash, g_str_equal);
@@ -135,7 +136,7 @@
 
     g_hash_table_replace(channel_hash, c->url, c);
 
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 
@@ -149,7 +150,7 @@
 
 	//g_print("copying clist...\n");
 
-	g_static_mutex_lock(&mutex);
+	pthread_mutex_lock(&mutex);
 	d = channel_list;
 	while(d!=NULL)
 	{
@@ -162,7 +163,7 @@
 				  );
 	    d = g_list_next(d);
 	}
-        g_static_mutex_unlock(&mutex);
+        pthread_mutex_unlock(&mutex);
 
         //g_print("updating channels...\n");
 
@@ -204,32 +205,32 @@
 
 void start_updater()
 {
-    GError *error;
-    g_thread_create(_updater_thread, NULL, TRUE, &error);
+    pthread_t pt;
+    pthread_create(&pt,NULL,_updater_thread, NULL);
 }
 
 void start_single_updater(gchar *name, gchar *url)
 {
-    GError *error;
     Channel *c1 = rss_channel_new(name, url, "");
+    pthread_t pt;
 
-    g_thread_create(_single_updater_thread, c1, TRUE, &error);
+    pthread_create(&pt,NULL,_single_updater_thread, c1);
 }
 
 
 void set_timeout(guint atimeout)
 {
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     timeout = atimeout;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
 }
 
 guint get_timeout()
 {
     guint ret;
-    g_static_mutex_lock(&mutex);
+    pthread_mutex_lock(&mutex);
     ret = timeout;
-    g_static_mutex_unlock(&mutex);
+    pthread_mutex_unlock(&mutex);
     return ret;
 }
 
diff -Naur gaim-rss-project/src/gaim-rss-reader.c gaim-rss-project-binesh/src/gaim-rss-reader.c
--- gaim-rss-project/src/gaim-rss-reader.c	2004-08-31 06:15:51.000000000 -0400
+++ gaim-rss-project-binesh/src/gaim-rss-reader.c	2004-09-02 14:49:07.000000000 -0400
@@ -256,7 +256,6 @@
 
     gaim_prefs_add_string_list("/plugins/gtk/gaim-rss-reader/feeds", sl);
 
-    g_thread_init(NULL);
 }
 
 
