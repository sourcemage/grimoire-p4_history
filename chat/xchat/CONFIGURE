function configure_set_bool() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    return
  fi
 
  if ! grep -q "$1=" $SPELL_CONFIG; then
    local VALUE="$1=n"
    query "$2" "${3:-y}" && VALUE="$1=y"
    echo "$VALUE" >> $SPELL_CONFIG
  fi
}
 
# @usage configure_optional <1:test> <2:enable-option> <3:disable-option> <4:prompt> <5:hint>
# works right if <test> is part of both <enable-option> and <disable-option>
# @return 0 if disabled
function configure_optional() {
  if ! grep -q "${1#-}" $SPELL_CONFIG; then
    local OPTION="$2"
    query "$4" "$5" || OPTION="$3"
    echo "OPTS=\"\$OPTS $OPTION\"" >> $SPELL_CONFIG
  fi
  # return the `enabled' flag for the option
  grep -q "${2#--}" $SPELL_CONFIG
}

configure_optional 'ipv6' '--enable-ipv6' '' 'enable IPv6 (default: no)' n
configure_optional 'xft' '--enable-xft' '' 'enable use of Xft directly (default: no)' n
configure_optional 'gtkfe' '--disable-gtkfe' '' 'disable building gtk frontend' n
configure_optional 'textfe' '--disable-textfe' '' 'disable building text frontend' n
configure_optional 'xlib' '--disable-xlib' '' 'disable use of xlib (for non X11 systems)' n
configure_optional 'plugin' '--disable-plugin' '' 'disable plugin support' n
configure_optional 'mmx' '--disable-mmx' '' 'disable MMX assembly routines' n