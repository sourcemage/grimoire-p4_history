           SPELL=mozart-base
         VERSION=1.2.5
         RELEASE=2003-02-12
     SOURCE_BASE=${SPELL%-*}-${VERSION}.${RELEASE//-/}
          SOURCE=$SOURCE_BASE-src.tar.gz
     SOURCE_HASH=sha512:a2d555363523449dbdd5e71355e7f880467b974f74cbf9998889d81f1229842307936c998c9e69d6aefa1ad1ba247ee4c505116ec2677fa49c686d18b8b0bfb4
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SOURCE_BASE
   SOURCE_URL[0]=http://www.mozart-oz.org/download/mozart-ftp/store/$VERSION-$RELEASE/$SOURCE
        WEB_SITE=http://www.mozart-oz.org/
         ENTERED=20030622
         UPDATED=20031119
      LICENSE[0]=http://www.mozart-oz.org/home/LICENSE.html
       BUILD_API=2
        KEYWORDS="devel"
           SHORT="The Mozart Programming System based on the Oz language"
cat << EOF
The Mozart Programming System is an advanced development platform for intelligent, distributed applications. The system is the result of a decade of research in programming language design and implementation, constraint-based inference, distributed computing, and human-computer interfaces. As a result, Mozart is unequaled in expressive power and functionality. Mozart has an interactive incremental development environment and a production-quality implementation for Unix and Windows platforms. Mozart is the fruit of an ongoing research collaboration by the Mozart Consortium.
Mozart is based on the Oz language, which supports declarative programming, object-oriented programming, constraint programming, and concurrency as part of a coherent whole. For distribution, Mozart provides a true network transparent implementation with support for network awareness, openness, and fault tolerance. Security is upcoming. Mozart is an ideal platform for both general-purpose distributed applications as well as for hard problems requiring sophisticated optimization and inferencing abilities. We have developed many applications including sophisticated collaborative tools, multi-agent systems, and digital assistants, as well as applications in natural language understanding and knowledge representation, in scheduling and time-tabling, and in placement and configuration.
EOF
