diff -ruN mozart.orig/platform/emulator/configure mozart-1.2.5.20030212/platform/emulator/configure
--- mozart.orig/platform/emulator/configure	2003-02-01 06:21:50.000000000 +1100
+++ mozart-1.2.5.20030212/platform/emulator/configure	2003-11-19 00:47:20.000000000 +1100
@@ -2508,7 +2508,7 @@
 fi
 
     
-  if `$LEX -S --version 2>/dev/null >/dev/null`; then
+  if `$LEX --version 2>/dev/null >/dev/null`; then
     GNU_LEX=yes
   else
     GNU_LEX=no
@@ -2609,146 +2609,7 @@
   fi
   FLEX=$LEX
   
-  
-
-  if test -z "$oz_cv_YACC"; then
-    for ac_prog in 'bison -y' byacc
-do
-# Extract the first word of "$ac_prog", so it can be a program name with args.
-set dummy $ac_prog; ac_word=$2
-echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:2621: checking for $ac_word" >&5
-if eval "test \"`echo '$''{'ac_cv_prog_YACC'+set}'`\" = set"; then
-  echo $ac_n "(cached) $ac_c" 1>&6
-else
-  if test -n "$YACC"; then
-  ac_cv_prog_YACC="$YACC" # Let the user override the test.
-else
-  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
-  ac_dummy="$PATH"
-  for ac_dir in $ac_dummy; do
-    test -z "$ac_dir" && ac_dir=.
-    if test -f $ac_dir/$ac_word; then
-      ac_cv_prog_YACC="$ac_prog"
-      break
-    fi
-  done
-  IFS="$ac_save_ifs"
-fi
-fi
-YACC="$ac_cv_prog_YACC"
-if test -n "$YACC"; then
-  echo "$ac_t""$YACC" 1>&6
-else
-  echo "$ac_t""no" 1>&6
-fi
-
-test -n "$YACC" && break
-done
-test -n "$YACC" || YACC="yacc"
-
-    
-  if oz_tmp=`$YACC --version 2>/dev/null` && \
-     oz_tmp=`expr "$oz_tmp" : '.*GNU'`; then
-    GNU_YACC=yes;
-  else
-    GNU_YACC=no
-  fi
-    if test "$GNU_YACC" = no; then
-      oz_tmp_ok=no
-      echo "configure: warning: $YACC is not GNU bison" 1>&2
-    else
-      
-  echo $ac_n "checking $YACC version is at least 1.25""... $ac_c" 1>&6
-echo "configure:2664: checking $YACC version is at least 1.25" >&5
-  oz_tmp_ok=no
-  if oz_tmp_version1=`$YACC --version 2>/dev/null`; then
-    # first we try to locate the string "version"
-    oz_tmp_version2=`echo "${oz_tmp_version1}" | tr '\012' ' '`
-
-    oz_tmp_version=`expr "${oz_tmp_version2}" : '.*version \([0-9._-]*\)'`
-    # if that failed: we look at the end of the first line
-    if test -z "$oz_tmp_version"; then
-      oz_tmp_IFS="$IFS"
-      IFS='
-'
-      for oz_tmp_version3 in ${oz_tmp_version1}; do
-        oz_tmp_version=`expr "${oz_tmp_version3}" : '.* \([0-9._-]*\)$'`
-	# else try to match the entire first line
-	if test -z "$oz_tmp_version"; then
-	  oz_tmp_version=`expr "${oz_tmp_version3}" : '\([0-9._-]*\)$'`
-	fi
-	break
-      done
-      IFS="$oz_tmp_IFS"
-    fi
-
-    if test -n "$oz_tmp_version"; then
-      
-  oz_tmp_got="$oz_tmp_version"
-  oz_tmp_want="1.25"
-  oz_tmp_IFS="$IFS"
-  IFS="$IFS._-"
-  oz_tmp_got=`echo $oz_tmp_got`
-  oz_tmp_want=`echo $oz_tmp_want`
-  set $oz_tmp_got DONE
-  IFS=""
-  IFS="$oz_tmp_IFS"
-  oz_tmp__ok=yes
-  for oz_tmp_cur in $oz_tmp_want; do
-    if test "$1" = DONE; then
-      break
-    elif test "$oz_tmp_cur" -lt "$1"; then
-      break
-    elif test "$oz_tmp_cur" -gt "$1"; then
-      oz_tmp__ok=no
-      break
-    fi
-    shift
-  done
-  oz_tmp_ok=$oz_tmp__ok
-    fi
-  fi
-  if test -z "$oz_tmp_version"; then
-    echo "$ac_t""no (cannot find version)" 1>&6
-  elif test $oz_tmp_ok = no; then
-    echo "$ac_t""no" 1>&6
-  else
-    echo "$ac_t""yes ($oz_tmp_version)" 1>&6
-  fi
-    fi
-    if test "$oz_tmp_ok" = yes; then
-      oz_cv_YACC=$YACC
-    else
-      if test "$oz_coolness" = yes; then
-        YACC=bison_not_found
-        echo "configure: warning: bison not found" 1>&2
-      else
-        { echo "configure: error: 
-GNU bison version 1.25 or higher is needed to build the system.
-It can be retrieved from:
-
-	ftp://ftp.gnu.org/pub/gnu/
 
-The latest version at this time is 1.30 and is available
-packaged as the following archive:
-
-	bison-1.30.tar.gz
-
-
-You may find a mirror archive closer to you by consulting:
-
-	http://www.gnu.org/order/ftp.html
-" 1>&2; exit 1; }
-      fi
-    fi
-  else
-    
-  echo $ac_n "checking for GNU bison""... $ac_c" 1>&6
-echo "configure:2749: checking for GNU bison" >&5
-  YACC=$oz_cv_YACC
-  echo "$ac_t""(cached) $YACC" 1>&6
-  fi
   BISON=$YACC
   
   
diff -ruN mozart.orig/platform/tools/gump/ozflex/configure mozart-1.2.5.20030212/platform/tools/gump/ozflex/configure
--- mozart.orig/platform/tools/gump/ozflex/configure	2003-02-01 06:21:50.000000000 +1100
+++ mozart-1.2.5.20030212/platform/tools/gump/ozflex/configure	2003-11-19 00:47:51.000000000 +1100
@@ -1765,144 +1765,6 @@
   
   
 
-  if test -z "$oz_cv_YACC"; then
-    for ac_prog in 'bison -y' byacc
-do
-# Extract the first word of "$ac_prog", so it can be a program name with args.
-set dummy $ac_prog; ac_word=$2
-echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:1775: checking for $ac_word" >&5
-if eval "test \"`echo '$''{'ac_cv_prog_YACC'+set}'`\" = set"; then
-  echo $ac_n "(cached) $ac_c" 1>&6
-else
-  if test -n "$YACC"; then
-  ac_cv_prog_YACC="$YACC" # Let the user override the test.
-else
-  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
-  ac_dummy="$PATH"
-  for ac_dir in $ac_dummy; do
-    test -z "$ac_dir" && ac_dir=.
-    if test -f $ac_dir/$ac_word; then
-      ac_cv_prog_YACC="$ac_prog"
-      break
-    fi
-  done
-  IFS="$ac_save_ifs"
-fi
-fi
-YACC="$ac_cv_prog_YACC"
-if test -n "$YACC"; then
-  echo "$ac_t""$YACC" 1>&6
-else
-  echo "$ac_t""no" 1>&6
-fi
-
-test -n "$YACC" && break
-done
-test -n "$YACC" || YACC="yacc"
-
-    
-  if oz_tmp=`$YACC --version 2>/dev/null` && \
-     oz_tmp=`expr "$oz_tmp" : '.*GNU'`; then
-    GNU_YACC=yes;
-  else
-    GNU_YACC=no
-  fi
-    if test "$GNU_YACC" = no; then
-      oz_tmp_ok=no
-      echo "configure: warning: $YACC is not GNU bison" 1>&2
-    else
-      
-  echo $ac_n "checking $YACC version is at least 1.25""... $ac_c" 1>&6
-echo "configure:1818: checking $YACC version is at least 1.25" >&5
-  oz_tmp_ok=no
-  if oz_tmp_version1=`$YACC --version 2>/dev/null`; then
-    # first we try to locate the string "version"
-    oz_tmp_version2=`echo "${oz_tmp_version1}" | tr '\012' ' '`
-
-    oz_tmp_version=`expr "${oz_tmp_version2}" : '.*version \([0-9._-]*\)'`
-    # if that failed: we look at the end of the first line
-    if test -z "$oz_tmp_version"; then
-      oz_tmp_IFS="$IFS"
-      IFS='
-'
-      for oz_tmp_version3 in ${oz_tmp_version1}; do
-        oz_tmp_version=`expr "${oz_tmp_version3}" : '.* \([0-9._-]*\)$'`
-	# else try to match the entire first line
-	if test -z "$oz_tmp_version"; then
-	  oz_tmp_version=`expr "${oz_tmp_version3}" : '\([0-9._-]*\)$'`
-	fi
-	break
-      done
-      IFS="$oz_tmp_IFS"
-    fi
-
-    if test -n "$oz_tmp_version"; then
-      
-  oz_tmp_got="$oz_tmp_version"
-  oz_tmp_want="1.25"
-  oz_tmp_IFS="$IFS"
-  IFS="$IFS._-"
-  oz_tmp_got=`echo $oz_tmp_got`
-  oz_tmp_want=`echo $oz_tmp_want`
-  set $oz_tmp_got DONE
-  IFS=""
-  IFS="$oz_tmp_IFS"
-  oz_tmp__ok=yes
-  for oz_tmp_cur in $oz_tmp_want; do
-    if test "$1" = DONE; then
-      break
-    elif test "$oz_tmp_cur" -lt "$1"; then
-      break
-    elif test "$oz_tmp_cur" -gt "$1"; then
-      oz_tmp__ok=no
-      break
-    fi
-    shift
-  done
-  oz_tmp_ok=$oz_tmp__ok
-    fi
-  fi
-  if test -z "$oz_tmp_version"; then
-    echo "$ac_t""no (cannot find version)" 1>&6
-  elif test $oz_tmp_ok = no; then
-    echo "$ac_t""no" 1>&6
-  else
-    echo "$ac_t""yes ($oz_tmp_version)" 1>&6
-  fi
-    fi
-    if test "$oz_tmp_ok" = yes; then
-      oz_cv_YACC=$YACC
-    else
-      if test "$oz_coolness" = yes; then
-        YACC=bison_not_found
-        echo "configure: warning: bison not found" 1>&2
-      else
-        { echo "configure: error: 
-GNU bison version 1.25 or higher is needed to build the system.
-It can be retrieved from:
-
-	ftp://ftp.gnu.org/pub/gnu/
-
-The latest version at this time is 1.30 and is available
-packaged as the following archive:
-
-	bison-1.30.tar.gz
-
-
-You may find a mirror archive closer to you by consulting:
-
-	http://www.gnu.org/order/ftp.html
-" 1>&2; exit 1; }
-      fi
-    fi
-  else
-    
-  echo $ac_n "checking for GNU bison""... $ac_c" 1>&6
-echo "configure:1903: checking for GNU bison" >&5
-  YACC=$oz_cv_YACC
-  echo "$ac_t""(cached) $YACC" 1>&6
-  fi
   BISON=$YACC
   
   
