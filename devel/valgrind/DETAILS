           SPELL=valgrind
if [ "$VALGRIND_SVN" == "y" ]; then
  if [ "$VALGRIND_SVN_AUTOUPDATE" == "y" ]; then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=svn
  fi
          SOURCE=$SPELL-svn.tar.bz2
   SOURCE_URL[0]=svn://svn.valgrind.org/valgrind/trunk:$SPELL-svn
  FORCE_DOWNLOAD=on
   SOURCE_IGNORE=volatile
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-svn
else
         VERSION=3.1.0
     SOURCE_HASH='sha512:3040aa2934e5eb41e11427d81ed9c3250251b70c59ef2a575f4e7259336921b490a9da59469c65b3e21263cecb5eb8fc5ce2a599d0986e8fd3217705ddc0de51'
          SOURCE=$SPELL-$VERSION.tar.bz2
   SOURCE_URL[0]=http://valgrind.org/downloads/$SOURCE
#     SOURCE_GPG="gurus.gpg:$SOURCE.sig"
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
fi
      LICENSE[0]=GPL
        WEB_SITE=http://valgrind.org
         ENTERED=20020731
         UPDATED=20020731
       BUILD_API=2
           SHORT="Valgrind, an open-source memory debugger for x86-GNU/Linux"
cat << EOF
Valgrind is a GPL'd tool to help you find memory-management problems in your
programs. When a program is run under Valgrind's supervision, all reads and
writes of memory are checked, and calls to malloc/new/free/delete are
intercepted. As a result, Valgrind can detect problems such as:
* Use of uninitialised memory
* Reading/writing memory after it has been free'd
* Reading/writing off the end of malloc'd blocks
* Reading/writing inappropriate areas on the stack
* Memory leaks -- where pointers to malloc'd blocks are lost forever
* Passing of uninitialised and/or unaddressible memory to system calls
* Mismatched use of malloc/new/new [] vs free/delete/delete []
* Some misuses of the POSIX pthreads API
EOF
