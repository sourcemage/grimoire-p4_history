diff -urpN httpd-2.0.52.orig/modules/ssl/ssl_engine_init.c httpd-2.0.52/modules/ssl/ssl_engine_init.c
--- httpd-2.0.52.orig/modules/ssl/ssl_engine_init.c	2004-11-30 17:16:06.732372944 -0800
+++ httpd-2.0.52/modules/ssl/ssl_engine_init.c	2004-11-30 17:17:35.955808920 -0800
@@ -439,6 +439,14 @@ static void ssl_init_ctx_protocol(server
      * Configure additional context ingredients
      */
     SSL_CTX_set_options(ctx, SSL_OP_SINGLE_DH_USE);
+
+#ifdef SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
+    /*
+     * Disallow a session from being resumed during a renegotiation,
+     * so that an acceptable cipher suite can be negotiated.
+     */
+    SSL_CTX_set_options(ctx, SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION);
+#endif
 }
 
 static void ssl_init_ctx_session_cache(server_rec *s,
diff -urpN httpd-2.0.52.orig/modules/ssl/ssl_engine_kernel.c httpd-2.0.52/modules/ssl/ssl_engine_kernel.c
--- httpd-2.0.52.orig/modules/ssl/ssl_engine_kernel.c	2004-11-30 17:16:06.721374616 -0800
+++ httpd-2.0.52/modules/ssl/ssl_engine_kernel.c	2004-11-30 17:17:35.965807400 -0800
@@ -719,6 +719,21 @@ int ssl_hook_Access(request_rec *r)
                 X509_free(peercert);
             }
         }
+
+        /*
+         * Also check that SSLCipherSuite has been enforced as expected.
+         */
+        if (cipher_list) {
+            cipher = SSL_get_current_cipher(ssl);
+            if (sk_SSL_CIPHER_find(cipher_list, cipher) < 0) {
+                ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
+                             "SSL cipher suite not renegotiated: "
+                             "access to %s denied using cipher %s",
+                              r->filename,
+                              SSL_CIPHER_get_name(cipher));
+                return HTTP_FORBIDDEN;
+            }
+        }
     }
 
     /*
