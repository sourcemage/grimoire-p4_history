           SPELL=ibpp
         VERSION=2-5-2-0
     SOURCE_HASH=sha512:1bcf3c9e1a464af88ab62164558beb3c6bb018084739e213390e7d391abdc2b32044b08d34972a57d567457ffad9f013718c1ff97c4c913c2fbd11f5d352c485
       BUILD_API=2
          SOURCE=$SPELL-$VERSION-src.zip
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL
        WEB_SITE=http://www.ibpp.org
   SOURCE_URL[0]=$SOURCEFORGE_URL/$SPELL/$SOURCE
          LICENSE=MPL
	    DOCS=""
          ENTERED=20031226
          UPDATED=20041030
        KEYWORDS="firebird database"
SHORT="C++ classes to access and administer a Firebird database"
cat << EOF
IBPP, where 'PP' stands for '++', is a C++ client interface for 
Firebird Server versions 1.0, 1.5 and further. It also works with 
InterBase® 6.0, though it is expected it might only support Firebird 
in the future. It is a class library, free of any specific 
development tool dependancies. It is not tied to any 'visual' or 
'RAD' tool. It was indeed developed to add Firebird access in any 
C++ application. Those applications using IBPP can be non-visual 
(CORBA/COM objects, other libraries of classes and functions, 
procedural 'legacy' code, for instance). But it can of course also 
be used in visual or RAD environments. IBPP is indeed purely a 
dynamic SQL interface to Firebird. In some easy (we think so :-) to 
use C++ classes, you will find nearly all what is needed to access a 
Firebird database, and manipulate the data. IBPP also offers access 
to most of the administrations tasks : creating a database, 
modifying its structure, performing online backups, administering 
user accounts on the server and so on.
EOF
