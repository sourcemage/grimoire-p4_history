--- libparted/fs_ext2/ext2.c	2002-04-08 08:59:45.000000000 +1000
+++ ../parted-1.6.6-pre2/libparted/fs_ext2/ext2.c	2003-06-30 11:45:13.000000000 +1000
@@ -355,8 +355,8 @@
 	inode->i_blocks = PED_CPU_TO_LE32(EXT2_INODE_BLOCKS(*inode)
 		       			  + delta * i512perblock);
 	size = EXT2_INODE_SIZE(*inode) + delta * fs->blocksize;
-	inode->i_size = PED_CPU_TO_LE32(size % 0x100000000);
-	inode->i_size_high = PED_CPU_TO_LE32(size / 0x100000000);
+	inode->i_size = PED_CPU_TO_LE32(size % (1LL << 32));
+	inode->i_size_high = PED_CPU_TO_LE32(size / (1LL << 32));
 	inode->i_mtime = PED_CPU_TO_LE32(time(NULL));
 }
 
@@ -748,10 +748,11 @@
 		& EXT3_FEATURE_INCOMPAT_RECOVER))
 	{
 		if (ped_exception_throw (
-			PED_EXCEPTION_WARNING, PED_EXCEPTION_IGNORE_CANCEL,
+			PED_EXCEPTION_ERROR, PED_EXCEPTION_IGNORE_CANCEL,
 			_("Filesystem was not cleanly unmounted!  "
-			  "You should e2fsck."))
-				== PED_EXCEPTION_CANCEL)
+			  "You should e2fsck.  Modifying an unclean filesystem "
+			  "could cause severe corruption."))
+				!= PED_EXCEPTION_IGNORE)
 			goto error_free_fs;
 	}
 
--- libparted/disk_gpt.c	2003-02-23 21:44:09.000000000 +1100
+++ ../parted-1.6.6-pre2/libparted/disk_gpt.c	2003-06-30 10:47:03.000000000 +1000
@@ -51,7 +51,7 @@
 #define EFI_PMBR_OSTYPE_EFI 0xEE
 #define MSDOS_MBR_SIGNATURE 0xaa55
 
-#define GPT_HEADER_SIGNATURE 0x5452415020494645
+#define GPT_HEADER_SIGNATURE 0x5452415020494645LL
 #define GPT_HEADER_REVISION_V1_00 0x00010000
 #define GPT_HEADER_REVISION_V0_99 0x00009900
 
@@ -462,9 +462,10 @@
 		if (ped_exception_throw (
 			PED_EXCEPTION_WARNING,
 			PED_EXCEPTION_IGNORE_CANCEL,
-			_("The format of the GPT partition table is newer "
-			  "than what Parted can recognise.  Please tell us!  "
-			  "bug-parted@gnu.org"))
+			_("The format of the GPT partition table is version "
+			  "%x, which is newer than what Parted can "
+			  "recognise.  Please tell us!  bug-parted@gnu.org"),
+			PED_CPU_TO_LE32 (gpt->Revision))
 				!= PED_EXCEPTION_IGNORE)
 			return 0;
 	}
@@ -885,6 +886,7 @@
 				       part->geom.start, part->geom.end);
 	if (!result)
 		goto error;
+	result->num = part->num;
 
 	if (result->type != 0)
 		return result;
