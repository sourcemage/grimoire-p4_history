diff -urpN grub-0.95.orig/util/grub-install.in grub-0.95/util/grub-install.in
--- grub-0.95.orig/util/grub-install.in	2004-11-09 13:25:38.159282168 -0800
+++ grub-0.95/util/grub-install.in	2004-11-09 13:56:53.385204496 -0800
@@ -40,6 +40,7 @@ no_floppy=
 force_lba=
 recheck=no
 debug=no
+justcopy=no
 
 # look for secure tempfile creation wrappers on this platform
 if test -x /bin/tempfile; then
@@ -223,6 +224,17 @@ find_device () {
     echo "$tmp_fname"
 }
 
+copy_images() {
+    # Copy the GRUB images to the GRUB directory.
+    for file in ${grubdir}/stage1 ${grubdir}/stage2 ${grubdir}/*stage1_5; do
+	rm -f $file || exit 1
+    done
+    for file in \
+	${pkgdatadir}/stage1 ${pkgdatadir}/stage2 ${pkgdatadir}/*stage1_5; do
+	cp -f $file ${grubdir} || exit 1
+    done
+}
+
 # Check the arguments.
 for option in "$@"; do
     case "$option" in
@@ -242,6 +254,8 @@ for option in "$@"; do
 	force_lba="--force-lba" ;;
     --recheck)
 	recheck=yes ;;
+    --just-copy)
+        justcopy=yes ;;
     # This is an undocumented feature...
     --debug)
 	debug=yes ;;
@@ -260,12 +274,6 @@ for option in "$@"; do
     esac
 done
 
-if test "x$install_device" = x; then
-    echo "install_device not specified." 1>&2
-    usage
-    exit 1
-fi
-
 # If the debugging feature is enabled, print commands.
 if test $debug = yes; then
     set -x
@@ -288,6 +296,18 @@ esac
 grubdir=${bootdir}/grub
 device_map=${grubdir}/device.map
 
+# if they just want the images copied, copy the images and then exit
+if test $justcopy = yes; then
+    copy_images
+    exit 0
+fi
+
+if test "x$install_device" = x; then
+    echo "install_device not specified." 1>&2
+    usage
+    exit 1
+fi
+
 # Check if GRUB is installed.
 # This is necessary, because the user can specify "grub --read-only".
 set $grub_shell dummy
@@ -401,14 +421,7 @@ EOF
     exit 1
 fi
 
-# Copy the GRUB images to the GRUB directory.
-for file in ${grubdir}/stage1 ${grubdir}/stage2 ${grubdir}/*stage1_5; do
-    rm -f $file || exit 1
-done
-for file in \
-    ${pkgdatadir}/stage1 ${pkgdatadir}/stage2 ${pkgdatadir}/*stage1_5; do
-    cp -f $file ${grubdir} || exit 1
-done
+copy_images
 
 # Make sure that GRUB reads the same images as the host OS.
 test -n "$mkimg" && img_file=`$mkimg`
