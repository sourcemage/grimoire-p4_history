           SPELL=yorick
         VERSION=1.6.02
          SOURCE=$SPELL-$VERSION.tgz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-1.6
   SOURCE_URL[0]=ftp://ftp-icf.llnl.gov/pub/Yorick/$SOURCE
           SOURCE_HASH=sha512:82facfe29acf3b272e2c41a9c91f3d796b471f6a7e7d0a2c75eaca918af503364e7c8d49ea6e2f7d339a4a887669d7184c77395f926aeb4a38183a348c4c45b8
     WEB_SITE[0]=http://www.maumae.net/yorick
     WEB_SITE[1]=ftp://ftp-icf.llnl.gov/pub/Yorick/doc/index.html
      MAINTAINER=avitzour@princeton.edu
      LICENSE[0]=ftp://ftp-icf.llnl.gov/pub/Yorick/doc/copyright.html
         ENTERED=20020416
         UPDATED=20030708
     BUILD_API=2
        KEYWORDS="science"
           SHORT="Yorick is an interpreted programming language, designed for postprocessing or steering large scientific simulation codes"

cat << EOF
Yorick is an interpreted programming language, designed for postprocessing or 
steering large scientific simulation codes. Smaller scientific simulations or 
calculations, such as the flow past an airfoil or the motion of a drumhead, 
can be written as standalone yorick programs. The language features a compact 
syntax for many common array operations, so it processes large arrays of 
numbers very efficiently. Unlike most interpreters, which are several hundred 
times slower than compiled code for number crunching, yorick can approach to 
within a factor of four or five of compiled speed for many common tasks. 
Superficially, yorick code resembles C code, but yorick variables are never 
explicitly declared and have a dynamic scoping similar to many Lisp dialects. 
The yorick language is designed to be typed interactively at a keyboard, as 
well as stored in files for later use. Yorick includes an interactive graphics 
package, and a binary file package capable of translating to and from the raw 
numeric formats of all modern computers. 

EOF
