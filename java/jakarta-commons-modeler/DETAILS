     PKG_PROJECT=jakarta
      PKG_SUBPRJ=commons
        PKG_NAME=modeler
           SPELL=${PKG_PROJECT}-${PKG_SUBPRJ}-${PKG_NAME}
         VERSION=20030402
          SOURCE=${PKG_SUBPRJ}-${PKG_NAME}-src-${VERSION}.zip
SOURCE_DIRECTORY=$BUILD_DIRECTORY/${PKG_SUBPRJ}-${PKG_NAME}
   SOURCE_URL[0]=http://cvs.apache.org/builds/${PKG_PROJECT}-${PKG_SUBPRJ}/nightly/${PKG_SUBPRJ}-${PKG_NAME}/$SOURCE
     SOURCE_HASH=sha512:4f947d092f0ed503f073ee1e5cd7c8df2bbcb4078563cc87effb9b57177061ba422977d6ab19fac055e05d4642a399855113706a9e6cd808e515baedbd03b81d
      LICENSE[0]=APACHE
        WEB_SITE=http://jakarta.apache.org/commons/modeler.html
         ENTERED=20030403
         UPDATED=20030403
      MAINTAINER=vydra@fria.fri.utc.sk
        KEYWORDS="java"
       BUILD_API=1
           SHORT="Jakarta commons modeler is an enhacement of JMX."
cat << EOF
Java Management Extensions (JMX) is an API that facilitates building management
applications that can configure, and perform operations on, a server application.
In general, each manageable component of the server application is represented 
by a Management Bean (or MBean, for short). JMX defines three types of MBeans, 
of which Model MBeans are the most flexible. Model MBeans provide a way to define
MBeans for many different components, without having to write a specific MBean 
implementation class for each one.

However, this power comes at a price. It is necessary to set up a substantial 
amount of metadata about each MBean, including the attributes it should expose
(similar to JavaBeans properties), the operations it should make available 
(similar to calling methods of a Java object via reflection), and other related
information. The Modeler component is designed to make this process fairly 
painless -- the required metadata is configured from an XML description of each
Model MBean to be supported. In addition, Modeler provides a factory mechanism 
to create the actual Model MBean instances themselves.
EOF
