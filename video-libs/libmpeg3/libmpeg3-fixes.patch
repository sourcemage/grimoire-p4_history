--- video/slice.c.orig	2004-08-31 19:26:59.833231807 +0200
+++ video/slice.c	2004-08-31 19:27:10.771837622 +0200
@@ -6,7 +6,7 @@
 
 #define CLIP(x)  ((x) >= 0 ? ((x) < 255 ? (x) : 255) : 0)
 
-static unsigned long long MMX_128 = 0x80008000800080LL;
+unsigned long long MMX_128 = 0x80008000800080LL;
 
 int mpeg3_new_slice_buffer(mpeg3_slice_buffer_t *slice_buffer)
 {
--- video/output.c.orig	2004-08-31 19:35:30.407156377 +0200
+++ video/output.c	2004-08-31 19:39:46.689491796 +0200
@@ -4,25 +4,25 @@
 
 #define CLIP(x)  ((x) >= 0 ? ((x) < 255 ? (x) : 255) : 0)
 
-static long long mpeg3_MMX_0 = 0L;
-static unsigned long  mpeg3_MMX_10w[]         = {0x00100010, 0x00100010};                     /*dd    00010 0010h, 000100010h */
-static unsigned long  mpeg3_MMX_80w[]         = {0x00800080, 0x00800080};                     /*dd    00080 0080h, 000800080h */
+long long mpeg3_MMX_0 = 0L;
+unsigned long  mpeg3_MMX_10w[]         = {0x00100010, 0x00100010};                     /*dd    00010 0010h, 000100010h */
+unsigned long  mpeg3_MMX_80w[]         = {0x00800080, 0x00800080};                     /*dd    00080 0080h, 000800080h */
 
-static unsigned long  mpeg3_MMX_00FFw[]       = {0x00ff00ff, 0x00ff00ff};                     /*dd    000FF 00FFh, 000FF00FFh */
+unsigned long  mpeg3_MMX_00FFw[]       = {0x00ff00ff, 0x00ff00ff};                     /*dd    000FF 00FFh, 000FF00FFh */
 
-static unsigned short mpeg3_MMX_Ublucoeff[]   = {0x81, 0x81, 0x81, 0x81};                     /*dd    00081 0081h, 000810081h */
-static unsigned short mpeg3_MMX_Vredcoeff[]   = {0x66, 0x66, 0x66, 0x66};                     /*dd    00066 0066h, 000660066h */
+unsigned short mpeg3_MMX_Ublucoeff[]   = {0x81, 0x81, 0x81, 0x81};                     /*dd    00081 0081h, 000810081h */
+unsigned short mpeg3_MMX_Vredcoeff[]   = {0x66, 0x66, 0x66, 0x66};                     /*dd    00066 0066h, 000660066h */
 
-static unsigned short mpeg3_MMX_Ugrncoeff[]   = {0xffe8, 0xffe8, 0xffe8, 0xffe8};             /*dd    0FFE7 FFE7h, 0FFE7FFE7h */
-static unsigned short mpeg3_MMX_Vgrncoeff[]   = {0xffcd, 0xffcd, 0xffcd, 0xffcd};             /*dd    0FFCC FFCCh, 0FFCCFFCCh */
+unsigned short mpeg3_MMX_Ugrncoeff[]   = {0xffe8, 0xffe8, 0xffe8, 0xffe8};             /*dd    0FFE7 FFE7h, 0FFE7FFE7h */
+unsigned short mpeg3_MMX_Vgrncoeff[]   = {0xffcd, 0xffcd, 0xffcd, 0xffcd};             /*dd    0FFCC FFCCh, 0FFCCFFCCh */
 
-static unsigned short mpeg3_MMX_Ycoeff[]      = {0x4a, 0x4a, 0x4a, 0x4a};                     /*dd    0004A 004Ah, 0004A004Ah */
+unsigned short mpeg3_MMX_Ycoeff[]      = {0x4a, 0x4a, 0x4a, 0x4a};                     /*dd    0004A 004Ah, 0004A004Ah */
 
-static unsigned short mpeg3_MMX_redmask[]     = {0xf800, 0xf800, 0xf800, 0xf800};             /*dd    07c00 7c00h, 07c007c00h */
+unsigned short mpeg3_MMX_redmask[]     = {0xf800, 0xf800, 0xf800, 0xf800};             /*dd    07c00 7c00h, 07c007c00h */
 
-static unsigned short mpeg3_MMX_grnmask[]     = {0x7e0, 0x7e0, 0x7e0, 0x7e0};                 /*dd    003e0 03e0h, 003e003e0h */
+unsigned short mpeg3_MMX_grnmask[]     = {0x7e0, 0x7e0, 0x7e0, 0x7e0};                 /*dd    003e0 03e0h, 003e003e0h */
 
-static unsigned char mpeg3_601_to_rgb[256];
+unsigned char mpeg3_601_to_rgb[256];
 
 /* Algorithm */
 /* 			r = (int)(*y + 1.371 * (*cr - 128)); */
@@ -207,12 +207,12 @@
 		);
 }
 
-static unsigned long long  mpeg3_MMX_U_80 = 0x0000008000800000LL;
-static unsigned long long  mpeg3_MMX_V_80 = 0x0000000000800080LL;
-static long long  mpeg3_MMX_U_COEF        = 0x00000058ffd30000LL;
-static long long  mpeg3_MMX_V_COEF        = 0x00000000ffea006fLL;
-static long long  mpeg3_MMX_601_Y_COEF    = 0x0000004800480048LL;
-static long long  mpeg3_MMX_601_Y_DIFF    = 0x0000000000000010LL;
+unsigned long long  mpeg3_MMX_U_80 = 0x0000008000800000LL;
+unsigned long long  mpeg3_MMX_V_80 = 0x0000000000800080LL;
+long long  mpeg3_MMX_U_COEF        = 0x00000058ffd30000LL;
+long long  mpeg3_MMX_V_COEF        = 0x00000000ffea006fLL;
+long long  mpeg3_MMX_601_Y_COEF    = 0x0000004800480048LL;
+long long  mpeg3_MMX_601_Y_DIFF    = 0x0000000000000010LL;
 
 inline void mpeg3_bgra32_mmx(unsigned long y, 
 		unsigned long u, 
@@ -297,10 +297,10 @@
 : "r" (&y), "r" (&u), "r" (&v), "r" (output));
 }
 
-static unsigned long long  mpeg3_MMX_U_80_RGB    = 0x0000000000800080LL;
-static unsigned long long  mpeg3_MMX_V_80_RGB    = 0x0000008000800000LL;
-static long long  mpeg3_MMX_U_COEF_RGB    = 0x00000000ffd30058LL;
-static long long  mpeg3_MMX_V_COEF_RGB    = 0x0000006fffea0000LL;
+unsigned long long  mpeg3_MMX_U_80_RGB    = 0x0000000000800080LL;
+unsigned long long  mpeg3_MMX_V_80_RGB    = 0x0000008000800000LL;
+long long  mpeg3_MMX_U_COEF_RGB    = 0x00000000ffd30058LL;
+long long  mpeg3_MMX_V_COEF_RGB    = 0x0000006fffea0000LL;
 
 inline void mpeg3_rgba32_mmx(unsigned long y, 
 		unsigned long u, 
--- video/reconstruct.c.orig	2004-08-31 19:41:49.910786570 +0200
+++ video/reconstruct.c	2004-08-31 19:42:23.557498113 +0200
@@ -5,7 +5,7 @@
 #ifdef HAVE_MMX
 
 #ifdef HAVE_3Dnow
-static inline void recva_mmx(unsigned char *s, unsigned char *d, int lx, int lx2, int h)
+inline void recva_mmx(unsigned char *s, unsigned char *d, int lx, int lx2, int h)
 {
 	__asm__(
 		".align	8\n"
@@ -34,7 +34,7 @@
 	);
 }
 
-static inline void recvac_mmx(unsigned char *s, unsigned char *d, int lx,int lx2, int h)
+inline void recvac_mmx(unsigned char *s, unsigned char *d, int lx,int lx2, int h)
 {
 	__asm__(
 		".align	8\n"
@@ -54,7 +54,7 @@
 	);
 }
 
-static inline void rech_mmx(unsigned char *s, unsigned char *d, int lx2, int h)
+inline void rech_mmx(unsigned char *s, unsigned char *d, int lx2, int h)
 {
 	__asm__ (
 		".align	8\n"
@@ -77,7 +77,7 @@
 	);
 }
 
-static inline void rechc_mmx(unsigned char *s, unsigned char *d, int lx2, int h)
+inline void rechc_mmx(unsigned char *s, unsigned char *d, int lx2, int h)
 {
 	__asm__ (
 		".align	8\n"
@@ -271,8 +271,8 @@
 }
 
 #else  // HAVE_3DNOW
-	static long long ADD_1	=	0x0101010101010101LL;
-	static long long MASK_AND = 0x7f7f7f7f7f7f7f7fLL;
+	long long ADD_1	=	0x0101010101010101LL;
+	long long MASK_AND = 0x7f7f7f7f7f7f7f7fLL;
 #endif
 
 static inline void rec_mmx(unsigned char *s, unsigned char *d, int lx2, int h)
