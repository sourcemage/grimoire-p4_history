diff -pruN mutt-1.5.5.1-orig/commands.c mutt-1.5.5.1-trash/commands.c
--- mutt-1.5.5.1-orig/commands.c	Wed Nov  5 10:41:31 2003
+++ mutt-1.5.5.1-trash/commands.c	Tue Nov 11 02:43:35 2003
@@ -663,11 +663,15 @@ void _mutt_save_message (HEADER *h, CONT
   if (decode || decrypt)
     mutt_parse_mime_message (Context, h);
 
-  if (mutt_append_message (ctx, Context, h, cmflags, chflags) == 0 && delete)
+  if (mutt_append_message (ctx, Context, h, cmflags, chflags) == 0)
   {
-    mutt_set_flag (Context, h, M_DELETE, 1);
-    if (option (OPTDELETEUNTAG))
-      mutt_set_flag (Context, h, M_TAG, 0);
+    if (delete)
+    {
+      mutt_set_flag (Context, h, M_DELETE, 1);
+      if (option (OPTDELETEUNTAG))
+	mutt_set_flag (Context, h, M_TAG, 0);
+    }
+    mutt_set_flag (Context, h, M_APPENDED, 1);
   }
 }
 
diff -pruN mutt-1.5.5.1-orig/flags.c mutt-1.5.5.1-trash/flags.c
--- mutt-1.5.5.1-orig/flags.c	Fri Jan 31 00:48:07 2003
+++ mutt-1.5.5.1-trash/flags.c	Tue Nov 11 02:43:35 2003
@@ -65,7 +65,13 @@ void _mutt_set_flag (CONTEXT *ctx, HEADE
       else if (h->deleted)
       {
 	h->deleted = 0;
-	if (upd_ctx) ctx->deleted--;
+	if (upd_ctx)
+	{
+	  ctx->deleted--;
+	  if (h->appended)
+	    ctx->appended--;
+	}
+	h->appended = 0; /* when undeleting, also reset the appended flag */
 #ifdef USE_IMAP
         /* see my comment above */
 	if (ctx->magic == M_IMAP) 
@@ -84,6 +90,17 @@ void _mutt_set_flag (CONTEXT *ctx, HEADE
 	 */
 	if (ctx->magic == M_MAILDIR && upd_ctx && h->trash)
 	  ctx->changed = 1;
+      }
+      break;
+
+    case M_APPENDED:
+      if (bf)
+      {
+	if (!h->appended)
+	{
+	  h->appended = 1;
+	  if (upd_ctx) ctx->appended++;
+	}
       }
       break;
 
diff -pruN mutt-1.5.5.1-orig/globals.h mutt-1.5.5.1-trash/globals.h
--- mutt-1.5.5.1-orig/globals.h	Wed Nov  5 10:41:31 2003
+++ mutt-1.5.5.1-trash/globals.h	Tue Nov 11 02:43:35 2003
@@ -110,6 +110,7 @@ WHERE char *StChars;
 WHERE char *Status;
 WHERE char *Tempdir;
 WHERE char *Tochars;
+WHERE char *TrashPath;
 WHERE char *Username;
 WHERE char *Visual;
 
diff -pruN mutt-1.5.5.1-orig/imap/message.c mutt-1.5.5.1-trash/imap/message.c
--- mutt-1.5.5.1-orig/imap/message.c	Wed Nov  5 10:41:36 2003
+++ mutt-1.5.5.1-trash/imap/message.c	Tue Nov 11 02:43:35 2003
@@ -624,6 +624,7 @@ int imap_copy_messages (CONTEXT* ctx, HE
         if (ctx->hdrs[n]->tagged)
         {
           mutt_set_flag (ctx, ctx->hdrs[n], M_DELETE, 1);
+	  mutt_set_flag (ctx, ctx->hdrs[n], M_APPENDED, 1);
           if (option (OPTDELETEUNTAG))
             mutt_set_flag (ctx, ctx->hdrs[n], M_TAG, 0);
         }
@@ -631,6 +632,7 @@ int imap_copy_messages (CONTEXT* ctx, HE
     else
     {
       mutt_set_flag (ctx, h, M_DELETE, 1);
+      mutt_set_flag (ctx, h, M_APPENDED, 1);
       if (option (OPTDELETEUNTAG))
         mutt_set_flag (ctx, h, M_TAG, 0);
     }
diff -pruN mutt-1.5.5.1-orig/init.h mutt-1.5.5.1-trash/init.h
--- mutt-1.5.5.1-orig/init.h	Wed Nov  5 10:41:32 2003
+++ mutt-1.5.5.1-trash/init.h	Tue Nov 11 02:43:35 2003
@@ -2559,6 +2559,16 @@ struct option_t MuttVars[] = {
   ** by \fIyou\fP.  The sixth character is used to indicate when a mail
   ** was sent to a mailing-list you subscribe to (default: L).
   */
+  { "trash",		DT_PATH, R_NONE, UL &TrashPath, 0 },
+  /*
+  ** .pp
+  ** If set, this variable specifies the path of the trash folder where the
+  ** mails marked for deletion will be moved, instead of being irremediably
+  ** purged.
+  ** .pp
+  ** NOTE: When you delete a message in the trash folder, it is really
+  ** deleted, so that you have a way to clean the trash.
+  */
 #ifdef USE_SOCKET
   { "tunnel",            DT_STR, R_NONE, UL &Tunnel, UL 0 },
   /*
diff -pruN mutt-1.5.5.1-orig/mutt.h mutt-1.5.5.1-trash/mutt.h
--- mutt-1.5.5.1-orig/mutt.h	Wed Nov  5 10:41:32 2003
+++ mutt-1.5.5.1-trash/mutt.h	Tue Nov 11 02:43:35 2003
@@ -197,6 +197,7 @@ enum
   M_DELETE,
   M_UNDELETE,
   M_DELETED,
+  M_APPENDED,
   M_FLAG,
   M_TAG,
   M_UNTAG,
@@ -636,6 +637,7 @@ typedef struct header
   unsigned int mime : 1;    		/* has a Mime-Version header? */
   unsigned int flagged : 1; 		/* marked important? */
   unsigned int tagged : 1;
+  unsigned int appended : 1; /* has been saved */
   unsigned int deleted : 1;
   unsigned int changed : 1;
   unsigned int attach_del : 1; 		/* has an attachment marked for deletion */
@@ -764,6 +766,7 @@ typedef struct
   int new;			/* how many new messages? */
   int unread;			/* how many unread messages? */
   int deleted;			/* how many deleted messages */
+  int appended;                 /* how many saved messages? */
   int flagged;			/* how many flagged messages */
   int msgnotreadyet;		/* which msg "new" in pager, -1 if none */
 #if defined USE_POP || defined USE_IMAP
diff -pruN mutt-1.5.5.1-orig/muttlib.c mutt-1.5.5.1-trash/muttlib.c
--- mutt-1.5.5.1-orig/muttlib.c	Wed Nov  5 10:41:32 2003
+++ mutt-1.5.5.1-trash/muttlib.c	Tue Nov 11 02:43:35 2003
@@ -1181,7 +1181,9 @@ int mutt_save_confirm (const char *s, st
       return 1;
     }
 
-    if (option (OPTCONFIRMAPPEND))
+    if (option (OPTCONFIRMAPPEND) &&
+	(!TrashPath || (mutt_strcmp (s, TrashPath) != 0)))
+      /* if we're appending to the trash, there's no point in asking */
     {
       snprintf (tmp, sizeof (tmp), _("Append messages to %s?"), s);
       if ((rc = mutt_yesorno (tmp, M_YES)) == M_NO)
diff -pruN mutt-1.5.5.1-orig/mx.c mutt-1.5.5.1-trash/mx.c
--- mutt-1.5.5.1-orig/mx.c	Wed Nov  5 10:41:32 2003
+++ mutt-1.5.5.1-trash/mx.c	Tue Nov 11 02:44:19 2003
@@ -815,6 +815,53 @@ static int sync_mailbox (CONTEXT *ctx, i
   return rc;
 }
 
+/* move deleted mails to the trash folder */
+static int trash_append (CONTEXT *ctx)
+{
+    CONTEXT *ctx_trash;
+    int i = 0;
+    struct stat st, stc;
+
+    if (!TrashPath || !ctx->deleted ||
+	(ctx->magic == M_MAILDIR && option (OPTMAILDIRTRASH)))
+      return 0;
+
+    for (;i < ctx->msgcount && (!ctx->hdrs[i]->deleted ||
+				ctx->hdrs[i]->appended); i++);
+    if (i == ctx->msgcount)
+      return 0; /* nothing to be done */
+
+    if (mutt_save_confirm (TrashPath, &st) != 0)
+    {
+      mutt_error _("message(s) not deleted");
+      return -1;
+    }
+
+    if (lstat (ctx->path, &stc) == 0 && stc.st_ino == st.st_ino
+	&& stc.st_dev == st.st_dev && stc.st_rdev == st.st_rdev)
+      return 0;  /* we are in the trash folder: simple sync */
+
+    if ((ctx_trash = mx_open_mailbox (TrashPath, M_APPEND, NULL)) != NULL)
+    {
+      for (i = 0 ; i < ctx->msgcount ; i++)
+	if (ctx->hdrs[i]->deleted && !ctx->hdrs[i]->appended
+	    && mutt_append_message (ctx_trash, ctx, ctx->hdrs[i], 0, 0) == -1)
+	  {
+	    mx_close_mailbox (ctx_trash, NULL);
+	    return -1;
+	  }
+
+      mx_close_mailbox (ctx_trash, NULL);
+    }
+    else
+    {
+      mutt_error _("Can't open trash folder");
+      return -1;
+    }
+
+    return 0;
+}
+
 /* save changes and close mailbox */
 int mx_close_mailbox (CONTEXT *ctx, int *index_hint)
 {
@@ -954,6 +1001,7 @@ int mx_close_mailbox (CONTEXT *ctx, int 
 	  if (mutt_append_message (&f, ctx, ctx->hdrs[i], 0, CH_UPDATE_LEN) == 0)
 	  {
 	    mutt_set_flag (ctx, ctx->hdrs[i], M_DELETE, 1);
+	    mutt_set_flag (ctx, ctx->hdrs[i], M_APPENDED, 1);
 	  }
 	  else
 	  {
@@ -975,6 +1023,14 @@ int mx_close_mailbox (CONTEXT *ctx, int 
     return 0;
   }
   
+  /* copy mails to the trash before expunging */
+  if (purge && ctx->deleted)
+    if (trash_append (ctx) != 0)
+    {
+      ctx->closing = 0;
+      return -1;
+    }
+
 #ifdef USE_IMAP
   /* allow IMAP to preserve the deleted flag across sessions */
   if (ctx->magic == M_IMAP)
@@ -1167,6 +1223,12 @@ int mx_sync_mailbox (CONTEXT *ctx, int *
    * mx_update_tables, so ctx->deleted is 0 when it comes back */
   msgcount = ctx->msgcount;
   deleted = ctx->deleted;
+
+  if (purge && ctx->deleted)
+  {
+    if (trash_append (ctx) == -1)
+      return -1;
+  } 
 
 #ifdef USE_IMAP
   if (ctx->magic == M_IMAP)
diff -pruN mutt-1.5.5.1-orig/postpone.c mutt-1.5.5.1-trash/postpone.c
--- mutt-1.5.5.1-orig/postpone.c	Wed Nov  5 10:41:33 2003
+++ mutt-1.5.5.1-trash/postpone.c	Tue Nov 11 02:43:35 2003
@@ -275,6 +275,9 @@ int mutt_get_postponed (CONTEXT *ctx, HE
   /* finished with this message, so delete it. */
   mutt_set_flag (PostContext, h, M_DELETE, 1);
 
+  /* and consider it saved, so that it won't be moved to the trash folder */
+  mutt_set_flag (PostContext, h, M_APPENDED, 1);
+
   /* update the count for the status display */
   PostCount = PostContext->msgcount - PostContext->deleted;
 
diff -pruN mutt-1.5.5.1-orig/PATCHES mutt-1.5.5.1-trash/PATCHES
--- mutt-1.5.5.1-orig/PATCHES	Tue Apr 15 15:18:34 2003
+++ mutt-1.5.5.1-trash/PATCHES	Tue Nov 11 02:43:35 2003
@@ -1,0 +1 @@
+patch-1.5.5.1.cd.trash_folder.3.4
