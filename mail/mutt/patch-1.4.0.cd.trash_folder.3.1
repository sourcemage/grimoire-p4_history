diff -pruN mutt-1.4.orig/commands.c mutt-1.4/commands.c
--- mutt-1.4.orig/commands.c	Wed Apr  3 12:54:19 2002
+++ mutt-1.4/commands.c	Sat Jun  1 23:42:05 2002
@@ -620,11 +620,15 @@ void _mutt_save_message (HEADER *h, CONT
   if (decode || decrypt)
     mutt_parse_mime_message (Context, h);
 
-  if (mutt_append_message (ctx, Context, h, cmflags, chflags) == 0 && delete)
+  if (mutt_append_message (ctx, Context, h, cmflags, chflags) == 0)
   {
-    mutt_set_flag (Context, h, M_DELETE, 1);
-    if (option (OPTDELETEUNTAG))
-      mutt_set_flag (Context, h, M_TAG, 0);
+    if (delete)
+    {
+      mutt_set_flag (Context, h, M_DELETE, 1);
+      if (option (OPTDELETEUNTAG))
+	mutt_set_flag (Context, h, M_TAG, 0);
+    }
+    mutt_set_flag (Context, h, M_APPENDED, 1);
   }
 }
 
diff -pruN mutt-1.4.orig/flags.c mutt-1.4/flags.c
--- mutt-1.4.orig/flags.c	Tue Jan 15 22:18:11 2002
+++ mutt-1.4/flags.c	Sat Jun  1 23:42:05 2002
@@ -53,7 +53,13 @@ void _mutt_set_flag (CONTEXT *ctx, HEADE
       else if (h->deleted)
       {
 	h->deleted = 0;
-	if (upd_ctx) ctx->deleted--;
+	if (upd_ctx)
+	{
+	  ctx->deleted--;
+	  if (h->appended)
+	    ctx->appended--;
+	}
+	h->appended = 0; /* when undeleting, also reset the appended flag */
 #ifdef USE_IMAP
         /* see my comment above */
 	if (ctx->magic == M_IMAP) 
@@ -72,6 +78,17 @@ void _mutt_set_flag (CONTEXT *ctx, HEADE
 	 */
 	if (ctx->magic == M_MAILDIR && upd_ctx && h->trash)
 	  ctx->changed = 1;
+      }
+      break;
+
+    case M_APPENDED:
+      if (bf)
+      {
+	if (!h->appended)
+	{
+	  h->appended = 1;
+	  if (upd_ctx) ctx->appended++;
+	}
       }
       break;
 
diff -pruN mutt-1.4.orig/globals.h mutt-1.4/globals.h
--- mutt-1.4.orig/globals.h	Thu Jan  3 21:57:19 2002
+++ mutt-1.4/globals.h	Sat Jun  1 23:42:05 2002
@@ -109,6 +109,7 @@ WHERE char *StChars;
 WHERE char *Status;
 WHERE char *Tempdir;
 WHERE char *Tochars;
+WHERE char *TrashPath;
 WHERE char *Username;
 WHERE char *Visual;
 
diff -pruN mutt-1.4.orig/init.h mutt-1.4/init.h
--- mutt-1.4.orig/init.h	Thu Apr 25 15:26:37 2002
+++ mutt-1.4/init.h	Sat Jun  1 23:42:05 2002
@@ -2256,6 +2256,16 @@ struct option_t MuttVars[] = {
   ** by \fIyou\fP.  The sixth character is used to indicate when a mail
   ** was sent to a mailing-list you subscribe to (default: L).
   */
+  { "trash",		DT_PATH, R_NONE, UL &TrashPath, 0 },
+  /*
+  ** .pp
+  ** If set, this variable specifies the path of the trash folder where the
+  ** mails marked for deletion will be moved, instead of being irremediably
+  ** purged.
+  ** .pp
+  ** NOTE: When you delete a message in the trash folder, it is really
+  ** deleted, so that you have a way to clean the trash.
+  */
 #ifdef USE_SOCKET
   { "tunnel",            DT_STR, R_NONE, UL &Tunnel, UL 0 },
   /*
diff -pruN mutt-1.4.orig/mutt.h mutt-1.4/mutt.h
--- mutt-1.4.orig/mutt.h	Thu Feb 28 09:24:13 2002
+++ mutt-1.4/mutt.h	Sat Jun  1 23:42:05 2002
@@ -184,6 +184,7 @@ enum
   M_DELETE,
   M_UNDELETE,
   M_DELETED,
+  M_APPENDED,
   M_FLAG,
   M_TAG,
   M_UNTAG,
@@ -620,6 +621,7 @@ typedef struct header
   unsigned int mime : 1;    		/* has a Mime-Version header? */
   unsigned int flagged : 1; 		/* marked important? */
   unsigned int tagged : 1;
+  unsigned int appended : 1; /* has been saved */
   unsigned int deleted : 1;
   unsigned int changed : 1;
   unsigned int attach_del : 1; 		/* has an attachment marked for deletion */
@@ -746,6 +748,7 @@ typedef struct
   int new;			/* how many new messages? */
   int unread;			/* how many unread messages? */
   int deleted;			/* how many deleted messages */
+  int appended;                 /* how many saved messages? */
   int flagged;			/* how many flagged messages */
   int msgnotreadyet;		/* which msg "new" in pager, -1 if none */
 #if defined USE_POP || defined USE_IMAP
diff -pruN mutt-1.4.orig/muttlib.c mutt-1.4/muttlib.c
--- mutt-1.4.orig/muttlib.c	Mon Mar 25 12:28:58 2002
+++ mutt-1.4/muttlib.c	Sat Jun  1 23:42:05 2002
@@ -1152,7 +1152,9 @@ int mutt_save_confirm (const char *s, st
       return 0;
     }
 
-    if (option (OPTCONFIRMAPPEND))
+    if (option (OPTCONFIRMAPPEND) &&
+	(!TrashPath || (mutt_strcmp (s, TrashPath) != 0)))
+      /* if we're appending to the trash, there's no point in asking */
     {
       snprintf (tmp, sizeof (tmp), _("Append messages to %s?"), s);
       if (mutt_yesorno (tmp, 1) < 1)
diff -pruN mutt-1.4.orig/mx.c mutt-1.4/mx.c
--- mutt-1.4.orig/mx.c	Wed Mar 20 10:53:34 2002
+++ mutt-1.4/mx.c	Sat Jun  1 23:42:05 2002
@@ -813,6 +813,53 @@ static int sync_mailbox (CONTEXT *ctx, i
   return rc;
 }
 
+/* move deleted mails to the trash folder */
+static int trash_append (CONTEXT *ctx)
+{
+    CONTEXT *ctx_trash;
+    int i = 0;
+    struct stat st, stc;
+
+    if (!TrashPath || !ctx->deleted ||
+	(ctx->magic == M_MAILDIR && option (OPTMAILDIRTRASH)))
+      return 0;
+
+    for (;i < ctx->msgcount && (!ctx->hdrs[i]->deleted ||
+				ctx->hdrs[i]->appended); i++);
+    if (i == ctx->msgcount)
+      return 0; /* nothing to be done */
+
+    if (!mutt_save_confirm (TrashPath, &st))
+    {
+      mutt_error _("message(s) not deleted");
+      return -1;
+    }
+
+    if (lstat (ctx->path, &stc) == 0 && stc.st_ino == st.st_ino
+	&& stc.st_dev == st.st_dev && stc.st_rdev == st.st_rdev)
+      return 0;  /* we are in the trash folder: simple sync */
+
+    if ((ctx_trash = mx_open_mailbox (TrashPath, M_APPEND, NULL)) != NULL)
+    {
+      for (i = 0 ; i < ctx->msgcount ; i++)
+	if (ctx->hdrs[i]->deleted && !ctx->hdrs[i]->appended
+	    && mutt_append_message (ctx_trash, ctx, ctx->hdrs[i], 0, 0) == -1)
+	  {
+	    mx_close_mailbox (ctx_trash, NULL);
+	    return -1;
+	  }
+
+      mx_close_mailbox (ctx_trash, NULL);
+    }
+    else
+    {
+      mutt_error _("Can't open trash folder");
+      return -1;
+    }
+
+    return 0;
+}
+
 /* save changes and close mailbox */
 int mx_close_mailbox (CONTEXT *ctx, int *index_hint)
 {
@@ -952,7 +999,9 @@ int mx_close_mailbox (CONTEXT *ctx, int 
 	  if (mutt_append_message (&f, ctx, ctx->hdrs[i], 0, CH_UPDATE_LEN) == 0)
 	  {
 	    ctx->hdrs[i]->deleted = 1;
+	    ctx->hdrs[i]->appended = 1;
 	    ctx->deleted++;
+	    ctx->appended++;
 	  }
 	  else
 	  {
@@ -996,11 +1045,19 @@ int mx_close_mailbox (CONTEXT *ctx, int 
 
     if (ctx->changed || ctx->deleted)
     {
-      if ((check = sync_mailbox (ctx, index_hint)) != 0)
+      int trsh = 0;
+
+      if ((!ctx->deleted || (trsh = trash_append (ctx)) == 0)
+	&& (check = sync_mailbox (ctx, index_hint)) != 0)
       {
 	ctx->closing = 0;
 	return check;
       }
+      if (trsh != 0)
+      {
+	ctx->closing = 0;
+	return -1;
+      }
     }
   }
 
@@ -1169,8 +1226,12 @@ int mx_sync_mailbox (CONTEXT *ctx, int *
   if (ctx->magic == M_IMAP)
     rc = imap_sync_mailbox (ctx, purge, index_hint);
   else
-#endif
+#endif /* enter this block unconditionally if IMAP is not used */
+  {
+    if (trash_append (ctx) == -1)
+      return -1;
     rc = sync_mailbox (ctx, index_hint);
+  }
   if (rc == 0)
   {
 #ifdef USE_IMAP
diff -pruN mutt-1.4.orig/postpone.c mutt-1.4/postpone.c
--- mutt-1.4.orig/postpone.c	Wed Oct 31 10:20:38 2001
+++ mutt-1.4/postpone.c	Sat Jun  1 23:42:05 2002
@@ -270,6 +270,9 @@ int mutt_get_postponed (CONTEXT *ctx, HE
   /* finished with this message, so delete it. */
   mutt_set_flag (PostContext, h, M_DELETE, 1);
 
+  /* and consider it saved, so that it won't be moved to the trash folder */
+  mutt_set_flag (PostContext, h, M_APPENDED, 1);
+
   /* update the count for the status display */
   PostCount = PostContext->msgcount - PostContext->deleted;
 
diff -pruN mutt-1.4.orig/PATCHES mutt-1.4/PATCHES
--- mutt-1.4.orig/PATCHES	Tue Apr  2 20:48:57 2002
+++ mutt-1.4/PATCHES	Sat Jun  1 23:42:05 2002
@@ -1,0 +1 @@
+patch-1.4.0.cd.trash_folder.3.1
