           SPELL=openglut
if  [  "$CVS"  ==  "y"  ];  then
         VERSION=cvs
          SOURCE=${SPELL}-${VERSION}.tar.bz2
   SOURCE_URL[0]=cvs://:pserver:anonymous@cvs.sourceforge.net:/cvsroot/openglut:openglut
   SOURCE_IGNORE=volatile
  FORCE_DOWNLOAD="on"
else
         VERSION=0.6.3
          SOURCE=${SPELL}-${VERSION}.tar.bz2
   SOURCE_URL[0]=$SOURCEFORGE_URL/$SPELL/$SOURCE
      SOURCE_GPG="gurus.gpg:${SOURCE}.sig:WORKS_FOR_ME"
  if [ "$DOC" == "y" ]; then
         SOURCE2=${SPELL}-${VERSION}-doc.tar.bz2
  SOURCE2_URL[0]=$SOURCEFORGE_URL/$SPELL/$SOURCE2
     SOURCE2_GPG="gurus.gpg:${SOURCE2}.sig:WORKS_FOR_ME"
  fi
fi

SOURCE_DIRECTORY=${BUILD_DIRECTORY}/${SPELL}-${VERSION}
        WEB_SITE=http://openglut.sourceforge.net/
         ENTERED=20040322
         UPDATED=20040322
      PATCHLEVEL=1
      LICENSE[0]=XCL
       BUILD_API=2
           SHORT="Open Source alternative to GLUT"
cat << EOF
Introduction
OpenGLUT is an open source project to evolve the GLUT (OpenGL Utility Toolkit) API (Application Programming Interface). OpenGLUT uses the FreeGLUT code base as a foundation for extending, enhancing and refining the API. Our initial goal is to define and implement OpenGLUT API Version 1.0 - intended to supercede the GLUT 3.x API by Mark Kilgard and implemented by FreeGLUT.
Motivation

    * GLUT is a popular, portable and well documented API
    * The GLUT abstraction is tidy and easy to learn
    * Mark Kilgard's implementation has known bugs/features/limitations
    * Mark Kilgard's implementation is not actively maintained and is not available as open source
    * There are areas of the GLUT that would benefit from refinement
    * Interactive 3D graphics is rapidly evolving
    * The FreeGLUT project is constrained by the requirement of an open source, 100% compatible GLUT 3.7 implementation

Features
As a new project, several areas are being considered for OpenGLUT 1.0

    * Generalised user input API: keyboards, mice, joysticks
    * Generalised window API: unmanaged and offscreen rendering
    * Fullscreen and game-mode API: rationalisation
    * Extended geometric API: beyond the box, sphere and teapot
    * Texturing API: common file format support
    * Text Rendering API: textured fonts
    * OpenGL extensions API
    * Complete documentation
EOF
