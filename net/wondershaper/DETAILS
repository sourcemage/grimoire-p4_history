           SPELL=wondershaper
         VERSION=1.1a
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=http://lartc.org/wondershaper/${SOURCE}
     SOURCE_HASH=sha512:7c2c18f0738291d1c3257a17946a4ab4f648c10ac0bce23bf400884e09cd2c5258f2149d053315d0594c1a33152f2078da8aed6c4a15f0a1bfaef5138ef09652
        WEB_SITE=http://lartc.org/wondershaper/
       BUILD_API=2
         ENTERED=20030724
         UPDATED=20030724
      LICENSE[0]=GPL
           SHORT="QoS control program"
cat << EOF
I attempted to create the holy grail:

* Maintain low latency for interfactive traffic at all times

This means that downloading or uploading files should not disturb SSH 
or even telnet. These are the most important things, even 200ms latency 
is sluggish to work over.

* Allow 'surfing' at reasonable speeds while up or downloading

Even though http is 'bulk' traffic, other traffic should not drown it 
out too much.

* Make sure uploads don't harm downloads, and the other way around

This is a much observed phenomenon where upstream traffic simply destroys 
download speed. It turns out that all this is possible, at the cost of a 
tiny bit of bandwidth. The reason that uploads, downloads and ssh hurt 
eachother is the presence of large queues in many domestic access devices 
like cable or DSL modems.
EOF
