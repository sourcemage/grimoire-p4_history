#!/bin/bash
# net-tools CONFIGURE script
#
# Created 2006-03-22 by Matthew Clark <matthewclark@inlesserterms.net>
#

make_option_list() {
  # Return a dialog-friendly list of modules and attributes
  OPTS=()
  local i=0
  local FILE QUESTION STATUS

  for FILE in $OPTIONDIR/* ;do
    source $FILE
    OPTS[i++]=${FILE##*/} # strip everything before (including) the last /
    OPTS[i++]=$QUESTION
    if [[ $STATUS == "y" ]] ;then
      OPTS[i++]=on
    else
      OPTS[i++]=off
    fi
  done
}

output_option_config() {
  # Function to save the config info.

  # Iterate through all the options.
  # This relies on the fact that the options are in the same
  # order here as they are in $* ($OUTPUT). They are.

  local OPTION NAME

  for OPTION in $OPTIONDIR/*
  do
    NAME=${OPTION##*/}
    if [ "$NAME" == "$1" ] ;then
      # it's in the list of enabled options
      config_set_option $NAME y
      shift #move on to the next option
    else
      config_set_option $NAME n
    fi
  done
}

option_config_menu() {
  local OPTS TITLE OUTPUT

  make_option_list
  TITLE="net-conf option selection"

  OUTPUT=$( $DIALOGPROG --title "$TITLE" --backtitle "$TITLE" \
            --nocancel --stdout --single-quoted --checklist   \
            "Select which features you'd like supported.
            If you don't know what these are, then just press OK
            to build all features."                              \
            0 0 0 "${OPTS[@]}" ) &&

  # OUTPUT now contains the list of modules to build
  # Yes, we don't quote $OUTPUT. We want each module as a seperate arg
  output_option_config $OUTPUT

  # When either of those fail we return failure
  # and fall back to option_config_list
}

option_config_list() {
  local FILE QUESTION STATUS NAME

  for FILE in $OPTIONDIR/* ;do
    source $FILE
    NAME=${FILE##*/}
    config_query $NAME "$QUESTION" $STATUS
  done
}


# Perform the configuration
OPTIONDIR="$SCRIPT_DIRECTORY/options"

# I cheat. I'm not really re-using this answer,
# but it makes for a neat way to skip the prompt on later non-reconf casts.

config_query NETTOOLS_CONFIG_GUI \
  "Would you like to use a dialog menu to select options? (recommended)" n &&
option_config_menu ||
option_config_list

config_set_option NETTOOLS_CONFIG_GUI n
