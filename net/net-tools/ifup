#!/bin/bash

# $1 - needle
exists_in_text()
{
  [ "$1" = "" ] && return 0

  IFS=" 	
"

  for x in $( cat ) ; do
    [ "$1" = "$x" ] && return 0
  done

  return 1
}

# $1 - device name
device_is_up()
{
  if [ -x /usr/bin/grep ]; then
    /sbin/ifconfig  | grep -A1 "^${1}\ " | grep 'inet addr' >& /dev/null
  else
    /sbin/ifconfig 2>&1 | exists_in_text $1
  fi
}

_do_device_up()
{
  # apply the wifi settings
  [ ! -z "$WIFI_NWID" ] && iwconfig $DEV nwid ${WIFI_NWID}
  [ ! -z "$WIFI_ESSID" ] && iwconfig $DEV essid ${WIFI_ESSID}
  [ ! -z "$WIFI_RATE" ] && iwconfig $DEV rate ${WIFI_RATE}
  [ ! -z "$WIFI_MODE" ] && iwconfig $DEV mode ${WIFI_MODE}
  [ ! -z "$WIFI_KEY1" ] && iwconfig $DEV key [1] ${WIFI_KEY1}
  [ ! -z "$WIFI_KEY2" ] && iwconfig $DEV key [2] ${WIFI_KEY2}
  [ ! -z "$WIFI_KEY3" ] && iwconfig $DEV key [3] ${WIFI_KEY3}
  [ ! -z "$WIFI_KEY4" ] && iwconfig $DEV key [4] ${WIFI_KEY4}
  [ ! -z "$WIFI_SECMODE" ] && iwconfig $DEV key ${WIFI_SECMODE}
  [ ! -z "$WIFI_DEFAULTKEY" ] && iwconfig $DEV key ${WIFI_DEFAULTKEY}
  [ ! -z "$WIFI_KEY" ] && iwconfig $DEV key [$WIFI_KEY]

  # some wifi cards need some time to setup the card before bringing it up
  if [ ! -z "$WIFI_NWID" ] || [ ! -z "$WIFI_ESSID" ] || [ ! -z "$WIFI_RATE" ] \
     || [ ! -z "$WIFI_SECMODE" ] || [ ! -z "$WIFI_KEY" ] [ ! -z "$WIFI_KEY1"] \
     || [ ! -z "$WIFI_MODE ]; then
       sleep 2
  fi

  if [ "$MODE" = dynamic ]; then
    . /etc/sysconfig/dhcpcd
    ARGS=""
    [ "$USE_SYSLOG" = "yes" ] && ARGS="-d"

    echo "Starting dhcpcd on $DEV ..."
    if [ -e $DHCPCD_PATH$DEV.pid ]; then
      dhcpcPid=`cat $DHCPCD_PATH$DEV.pid`
      dhcpcd -k $DEV 1>/dev/null 2>&1 &&
      renice 10 $dhcpcPid 1>/dev/null 2>&1 || rm -f $DHCPCD_PATH$DEV.pid &&
      sleep 1
    fi &&
    dhcpcd -t $TIMEOUT $ARGS $OPTIONS $DEV
  elif [ "$MODE" = static ]; then
    echo "Setting up static networking on $DEV..."
    ARGS=""
    if [ "$POINTOPOINT" != "" ] ; then
      ARGS="$ARGS pointopoint $POINTOPOINT"
    fi
    if [ "$MTU" != "" ] ; then
      ARGS="$ARGS mtu $MTU"
    fi

    ifconfig $DEV $IP broadcast $BROADCAST netmask $NETMASK $ARGS
  else
    echo "There are errors in $netdevdir/$DEV.dev"
    exit 1
  fi
}

_do_route_up()
{
  # check if GATEWAY is set; gateway is set by PPP or other software in some
  # cases
  if [ "$GATEWAY" ]; then
    route add default gw $GATEWAY dev $DEV
  fi 
}

_on_up()
{
  true
}

# Handles function "overloading"
run_func() {
  # If for example do_route_up exists then run it, otherwise run _do_route_up
  if [ "$( type -t $1 )" = function ] ; then
    $1
  else
    _$1
  fi
}

netdevdir=/etc/sysconfig/network

#change this if your .pid file hides somewhere else
DHCPCD_PATH="/etc/dhcpc/dhcpcd-"
DEV=$1

if [ -z $DEV ]; then
  echo "Usage: ifup <device>"
  exit 2
fi

if [ ! -f $netdevdir/$DEV.dev ]; then
  echo "$DEV: no such network device"
  exit 1
fi

if device_is_up $DEV ; then
  echo "$DEV already up"
  exit 0
fi

unset MODE MODULE IP BROADCAST NETMASK GATEWAY POINTOPOINT MTU UP_ON_BOOT
unset WIFI_NWID WIFI_ESSID WIFI_RATE WIFI_MODE WIFI_SECMODE WIFI_ENCKEY
unset do_device_up do_route_up on_up

. $netdevdir/$DEV.dev

if [ -z "$MODE" ]; then
  echo "There are errors in $netdevdir/$DEV.dev"
  exit 1
fi

if [ "${_OBEY_UP_ON_BOOT}" = 1 -a "$UP_ON_BOOT" = no ] ; then
  exit 0
fi

if [ "$MODULE" ] && ! /sbin/lsmod | exists_in_text "$MODULE" ; then
  echo "Loading module $MODULE for $DEV ..."
  modprobe  $MODULE
fi &&

run_func do_device_up 
run_func do_route_up 
run_func on_up
