function configure_set_bool() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    return
  fi
 
  if ! grep -q "$1=" $SPELL_CONFIG; then
    local VALUE="$1=n"
    query "$2" "${3:-y}" && VALUE="$1=y"
    echo "$VALUE" >> $SPELL_CONFIG
  fi
}
 
# @usage configure_optional <1:test> <2:enable-option> <3:disable-option> <4:prompt> <5:hint>
# works right if <test> is part of both <enable-option> and <disable-option>
# @return 0 if disabled
function configure_optional() {
  if ! grep -q "${1#-}" $SPELL_CONFIG; then
    local OPTION="$2"
    query "$4" "$5" || OPTION="$3"
    echo "OPTS=\"\$OPTS $OPTION\"" >> $SPELL_CONFIG
  fi
  # return the `enabled' flag for the option
  grep -q "${2#--}" $SPELL_CONFIG
}

configure_optional 'ipv6'	'--enable-ipv6'		'--disable-ipv6'	'enable IPv6 (default: no)' n
configure_optional 'xft'	'--enable-xft'		'--disable-xft'		'enable use of Xft directly (default: no)' n
configure_optional 'shm'	'--enable-shm'          'disable-shm'           'enable use of XShm for fast tinting  (default: no)' n
configure_optional 'textfe'	'--enable-textfe'	'--disable-textfe'	'build the text frontend' y
configure_optional 'xlib'	'--enable-xlib'		'--disable-xlib'	'use of xlib (for X11 systems)' y
configure_optional 'plugin'	'--enable-plugin'	'--disable-plugin'	'enable plugin support' y
configure_optional 'mmx'	'--enable-mmx'		'--disable-mmx'		'enable MMX assembly routines' y
