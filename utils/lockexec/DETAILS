SPELL=lockexec
VERSION=0.3.1
SOURCE=$SPELL-0.3.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
SOURCE_URL[0]=${SOURCEFORGE_URL}/${SPELL}/${SOURCE}
WEB_SITE=http://lockexec.sourceforge.net/
ENTERED=20021001
UPDATED=20021001
MD5[0]=c65dbc069f510b225e328b7f417672fc
MAINTAINER=wandre-l@netcourrier.com
SHORT="lockfile management and control."
cat << EOF
The normal lock file mechanism available at the shell level in unix is the
'lockfile' command. It works by checking existence of a series of files to
control locking operations. There are instances where this simple scheme fails:
Allowing shared or exclusive access to the lockfile. For example having 
multiple 'reader' processes, but only one 'writer' process.
If the process owning the lockfile unexpectedly terminates and does not delete
the lockfile then it is difficult to determine the correct course of action.
lockexec was built to resolve these issues. It is allows the creation of both
shared and exclusive locks. And since it depends on the fcntl state of of
file, and not the files existance, if can't be thrown by tasks that terminate
without removing the lockfiles.
EOF
